{"ast":null,"code":"'use strict';\n\nvar assert = require('assert'); // from https://github.com/bitcoinjs/bitcoinjs-lib\nvar enforceType = require('./enforce_types');\nvar BigInteger = require('bigi');\nfunction ECSignature(r, s) {\n  enforceType(BigInteger, r);\n  enforceType(BigInteger, s);\n  this.r = r;\n  this.s = s;\n}\n\n// Import operations\nECSignature.parseCompact = function (buffer) {\n  assert.equal(buffer.length, 65, 'Invalid signature length');\n  var i = buffer.readUInt8(0) - 27;\n\n  // At most 3 bits\n  assert.equal(i, i & 7, 'Invalid signature parameter');\n  var compressed = !!(i & 4);\n\n  // Recovery param only\n  i = i & 3;\n  var r = BigInteger.fromBuffer(buffer.slice(1, 33));\n  var s = BigInteger.fromBuffer(buffer.slice(33));\n  return {\n    compressed: compressed,\n    i: i,\n    signature: new ECSignature(r, s)\n  };\n};\nECSignature.fromDER = function (buffer) {\n  assert.equal(buffer.readUInt8(0), 0x30, 'Not a DER sequence');\n  assert.equal(buffer.readUInt8(1), buffer.length - 2, 'Invalid sequence length');\n  assert.equal(buffer.readUInt8(2), 0x02, 'Expected a DER integer');\n  var rLen = buffer.readUInt8(3);\n  assert(rLen > 0, 'R length is zero');\n  var offset = 4 + rLen;\n  assert.equal(buffer.readUInt8(offset), 0x02, 'Expected a DER integer (2)');\n  var sLen = buffer.readUInt8(offset + 1);\n  assert(sLen > 0, 'S length is zero');\n  var rB = buffer.slice(4, offset);\n  var sB = buffer.slice(offset + 2);\n  offset += 2 + sLen;\n  if (rLen > 1 && rB.readUInt8(0) === 0x00) {\n    assert(rB.readUInt8(1) & 0x80, 'R value excessively padded');\n  }\n  if (sLen > 1 && sB.readUInt8(0) === 0x00) {\n    assert(sB.readUInt8(1) & 0x80, 'S value excessively padded');\n  }\n  assert.equal(offset, buffer.length, 'Invalid DER encoding');\n  var r = BigInteger.fromDERInteger(rB);\n  var s = BigInteger.fromDERInteger(sB);\n  assert(r.signum() >= 0, 'R value is negative');\n  assert(s.signum() >= 0, 'S value is negative');\n  return new ECSignature(r, s);\n};\n\n// FIXME: 0x00, 0x04, 0x80 are SIGHASH_* boundary constants, importing Transaction causes a circular dependency\nECSignature.parseScriptSignature = function (buffer) {\n  var hashType = buffer.readUInt8(buffer.length - 1);\n  var hashTypeMod = hashType & ~0x80;\n  assert(hashTypeMod > 0x00 && hashTypeMod < 0x04, 'Invalid hashType');\n  return {\n    signature: ECSignature.fromDER(buffer.slice(0, -1)),\n    hashType: hashType\n  };\n};\n\n// Export operations\nECSignature.prototype.toCompact = function (i, compressed) {\n  if (compressed) i += 4;\n  i += 27;\n  var buffer = new Buffer(65);\n  buffer.writeUInt8(i, 0);\n  this.r.toBuffer(32).copy(buffer, 1);\n  this.s.toBuffer(32).copy(buffer, 33);\n  return buffer;\n};\nECSignature.prototype.toDER = function () {\n  var rBa = this.r.toDERInteger();\n  var sBa = this.s.toDERInteger();\n  var sequence = [];\n\n  // INTEGER\n  sequence.push(0x02, rBa.length);\n  sequence = sequence.concat(rBa);\n\n  // INTEGER\n  sequence.push(0x02, sBa.length);\n  sequence = sequence.concat(sBa);\n\n  // SEQUENCE\n  sequence.unshift(0x30, sequence.length);\n  return new Buffer(sequence);\n};\nECSignature.prototype.toScriptSignature = function (hashType) {\n  var hashTypeBuffer = new Buffer(1);\n  hashTypeBuffer.writeUInt8(hashType, 0);\n  return Buffer.concat([this.toDER(), hashTypeBuffer]);\n};\nmodule.exports = ECSignature;","map":{"version":3,"names":["assert","require","enforceType","BigInteger","ECSignature","r","s","parseCompact","buffer","equal","length","i","readUInt8","compressed","fromBuffer","slice","signature","fromDER","rLen","offset","sLen","rB","sB","fromDERInteger","signum","parseScriptSignature","hashType","hashTypeMod","prototype","toCompact","Buffer","writeUInt8","toBuffer","copy","toDER","rBa","toDERInteger","sBa","sequence","push","concat","unshift","toScriptSignature","hashTypeBuffer","module","exports"],"sources":["C:/Users/sunil/kalakaari/node_modules/@hiveio/hive-js/lib/auth/ecc/src/ecsignature.js"],"sourcesContent":["'use strict';\n\nvar assert = require('assert'); // from https://github.com/bitcoinjs/bitcoinjs-lib\nvar enforceType = require('./enforce_types');\n\nvar BigInteger = require('bigi');\n\nfunction ECSignature(r, s) {\n  enforceType(BigInteger, r);\n  enforceType(BigInteger, s);\n\n  this.r = r;\n  this.s = s;\n}\n\n// Import operations\nECSignature.parseCompact = function (buffer) {\n  assert.equal(buffer.length, 65, 'Invalid signature length');\n  var i = buffer.readUInt8(0) - 27;\n\n  // At most 3 bits\n  assert.equal(i, i & 7, 'Invalid signature parameter');\n  var compressed = !!(i & 4);\n\n  // Recovery param only\n  i = i & 3;\n\n  var r = BigInteger.fromBuffer(buffer.slice(1, 33));\n  var s = BigInteger.fromBuffer(buffer.slice(33));\n\n  return {\n    compressed: compressed,\n    i: i,\n    signature: new ECSignature(r, s)\n  };\n};\n\nECSignature.fromDER = function (buffer) {\n  assert.equal(buffer.readUInt8(0), 0x30, 'Not a DER sequence');\n  assert.equal(buffer.readUInt8(1), buffer.length - 2, 'Invalid sequence length');\n  assert.equal(buffer.readUInt8(2), 0x02, 'Expected a DER integer');\n\n  var rLen = buffer.readUInt8(3);\n  assert(rLen > 0, 'R length is zero');\n\n  var offset = 4 + rLen;\n  assert.equal(buffer.readUInt8(offset), 0x02, 'Expected a DER integer (2)');\n\n  var sLen = buffer.readUInt8(offset + 1);\n  assert(sLen > 0, 'S length is zero');\n\n  var rB = buffer.slice(4, offset);\n  var sB = buffer.slice(offset + 2);\n  offset += 2 + sLen;\n\n  if (rLen > 1 && rB.readUInt8(0) === 0x00) {\n    assert(rB.readUInt8(1) & 0x80, 'R value excessively padded');\n  }\n\n  if (sLen > 1 && sB.readUInt8(0) === 0x00) {\n    assert(sB.readUInt8(1) & 0x80, 'S value excessively padded');\n  }\n\n  assert.equal(offset, buffer.length, 'Invalid DER encoding');\n  var r = BigInteger.fromDERInteger(rB);\n  var s = BigInteger.fromDERInteger(sB);\n\n  assert(r.signum() >= 0, 'R value is negative');\n  assert(s.signum() >= 0, 'S value is negative');\n\n  return new ECSignature(r, s);\n};\n\n// FIXME: 0x00, 0x04, 0x80 are SIGHASH_* boundary constants, importing Transaction causes a circular dependency\nECSignature.parseScriptSignature = function (buffer) {\n  var hashType = buffer.readUInt8(buffer.length - 1);\n  var hashTypeMod = hashType & ~0x80;\n\n  assert(hashTypeMod > 0x00 && hashTypeMod < 0x04, 'Invalid hashType');\n\n  return {\n    signature: ECSignature.fromDER(buffer.slice(0, -1)),\n    hashType: hashType\n  };\n};\n\n// Export operations\nECSignature.prototype.toCompact = function (i, compressed) {\n  if (compressed) i += 4;\n  i += 27;\n\n  var buffer = new Buffer(65);\n  buffer.writeUInt8(i, 0);\n\n  this.r.toBuffer(32).copy(buffer, 1);\n  this.s.toBuffer(32).copy(buffer, 33);\n\n  return buffer;\n};\n\nECSignature.prototype.toDER = function () {\n  var rBa = this.r.toDERInteger();\n  var sBa = this.s.toDERInteger();\n\n  var sequence = [];\n\n  // INTEGER\n  sequence.push(0x02, rBa.length);\n  sequence = sequence.concat(rBa);\n\n  // INTEGER\n  sequence.push(0x02, sBa.length);\n  sequence = sequence.concat(sBa);\n\n  // SEQUENCE\n  sequence.unshift(0x30, sequence.length);\n\n  return new Buffer(sequence);\n};\n\nECSignature.prototype.toScriptSignature = function (hashType) {\n  var hashTypeBuffer = new Buffer(1);\n  hashTypeBuffer.writeUInt8(hashType, 0);\n\n  return Buffer.concat([this.toDER(), hashTypeBuffer]);\n};\n\nmodule.exports = ECSignature;"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,MAAM,GAAGC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;AAChC,IAAIC,WAAW,GAAGD,OAAO,CAAC,iBAAiB,CAAC;AAE5C,IAAIE,UAAU,GAAGF,OAAO,CAAC,MAAM,CAAC;AAEhC,SAASG,WAAWA,CAACC,CAAC,EAAEC,CAAC,EAAE;EACzBJ,WAAW,CAACC,UAAU,EAAEE,CAAC,CAAC;EAC1BH,WAAW,CAACC,UAAU,EAAEG,CAAC,CAAC;EAE1B,IAAI,CAACD,CAAC,GAAGA,CAAC;EACV,IAAI,CAACC,CAAC,GAAGA,CAAC;AACZ;;AAEA;AACAF,WAAW,CAACG,YAAY,GAAG,UAAUC,MAAM,EAAE;EAC3CR,MAAM,CAACS,KAAK,CAACD,MAAM,CAACE,MAAM,EAAE,EAAE,EAAE,0BAA0B,CAAC;EAC3D,IAAIC,CAAC,GAAGH,MAAM,CAACI,SAAS,CAAC,CAAC,CAAC,GAAG,EAAE;;EAEhC;EACAZ,MAAM,CAACS,KAAK,CAACE,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAE,6BAA6B,CAAC;EACrD,IAAIE,UAAU,GAAG,CAAC,EAAEF,CAAC,GAAG,CAAC,CAAC;;EAE1B;EACAA,CAAC,GAAGA,CAAC,GAAG,CAAC;EAET,IAAIN,CAAC,GAAGF,UAAU,CAACW,UAAU,CAACN,MAAM,CAACO,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;EAClD,IAAIT,CAAC,GAAGH,UAAU,CAACW,UAAU,CAACN,MAAM,CAACO,KAAK,CAAC,EAAE,CAAC,CAAC;EAE/C,OAAO;IACLF,UAAU,EAAEA,UAAU;IACtBF,CAAC,EAAEA,CAAC;IACJK,SAAS,EAAE,IAAIZ,WAAW,CAACC,CAAC,EAAEC,CAAC;EACjC,CAAC;AACH,CAAC;AAEDF,WAAW,CAACa,OAAO,GAAG,UAAUT,MAAM,EAAE;EACtCR,MAAM,CAACS,KAAK,CAACD,MAAM,CAACI,SAAS,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,oBAAoB,CAAC;EAC7DZ,MAAM,CAACS,KAAK,CAACD,MAAM,CAACI,SAAS,CAAC,CAAC,CAAC,EAAEJ,MAAM,CAACE,MAAM,GAAG,CAAC,EAAE,yBAAyB,CAAC;EAC/EV,MAAM,CAACS,KAAK,CAACD,MAAM,CAACI,SAAS,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,wBAAwB,CAAC;EAEjE,IAAIM,IAAI,GAAGV,MAAM,CAACI,SAAS,CAAC,CAAC,CAAC;EAC9BZ,MAAM,CAACkB,IAAI,GAAG,CAAC,EAAE,kBAAkB,CAAC;EAEpC,IAAIC,MAAM,GAAG,CAAC,GAAGD,IAAI;EACrBlB,MAAM,CAACS,KAAK,CAACD,MAAM,CAACI,SAAS,CAACO,MAAM,CAAC,EAAE,IAAI,EAAE,4BAA4B,CAAC;EAE1E,IAAIC,IAAI,GAAGZ,MAAM,CAACI,SAAS,CAACO,MAAM,GAAG,CAAC,CAAC;EACvCnB,MAAM,CAACoB,IAAI,GAAG,CAAC,EAAE,kBAAkB,CAAC;EAEpC,IAAIC,EAAE,GAAGb,MAAM,CAACO,KAAK,CAAC,CAAC,EAAEI,MAAM,CAAC;EAChC,IAAIG,EAAE,GAAGd,MAAM,CAACO,KAAK,CAACI,MAAM,GAAG,CAAC,CAAC;EACjCA,MAAM,IAAI,CAAC,GAAGC,IAAI;EAElB,IAAIF,IAAI,GAAG,CAAC,IAAIG,EAAE,CAACT,SAAS,CAAC,CAAC,CAAC,KAAK,IAAI,EAAE;IACxCZ,MAAM,CAACqB,EAAE,CAACT,SAAS,CAAC,CAAC,CAAC,GAAG,IAAI,EAAE,4BAA4B,CAAC;EAC9D;EAEA,IAAIQ,IAAI,GAAG,CAAC,IAAIE,EAAE,CAACV,SAAS,CAAC,CAAC,CAAC,KAAK,IAAI,EAAE;IACxCZ,MAAM,CAACsB,EAAE,CAACV,SAAS,CAAC,CAAC,CAAC,GAAG,IAAI,EAAE,4BAA4B,CAAC;EAC9D;EAEAZ,MAAM,CAACS,KAAK,CAACU,MAAM,EAAEX,MAAM,CAACE,MAAM,EAAE,sBAAsB,CAAC;EAC3D,IAAIL,CAAC,GAAGF,UAAU,CAACoB,cAAc,CAACF,EAAE,CAAC;EACrC,IAAIf,CAAC,GAAGH,UAAU,CAACoB,cAAc,CAACD,EAAE,CAAC;EAErCtB,MAAM,CAACK,CAAC,CAACmB,MAAM,CAAC,CAAC,IAAI,CAAC,EAAE,qBAAqB,CAAC;EAC9CxB,MAAM,CAACM,CAAC,CAACkB,MAAM,CAAC,CAAC,IAAI,CAAC,EAAE,qBAAqB,CAAC;EAE9C,OAAO,IAAIpB,WAAW,CAACC,CAAC,EAAEC,CAAC,CAAC;AAC9B,CAAC;;AAED;AACAF,WAAW,CAACqB,oBAAoB,GAAG,UAAUjB,MAAM,EAAE;EACnD,IAAIkB,QAAQ,GAAGlB,MAAM,CAACI,SAAS,CAACJ,MAAM,CAACE,MAAM,GAAG,CAAC,CAAC;EAClD,IAAIiB,WAAW,GAAGD,QAAQ,GAAG,CAAC,IAAI;EAElC1B,MAAM,CAAC2B,WAAW,GAAG,IAAI,IAAIA,WAAW,GAAG,IAAI,EAAE,kBAAkB,CAAC;EAEpE,OAAO;IACLX,SAAS,EAAEZ,WAAW,CAACa,OAAO,CAACT,MAAM,CAACO,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACnDW,QAAQ,EAAEA;EACZ,CAAC;AACH,CAAC;;AAED;AACAtB,WAAW,CAACwB,SAAS,CAACC,SAAS,GAAG,UAAUlB,CAAC,EAAEE,UAAU,EAAE;EACzD,IAAIA,UAAU,EAAEF,CAAC,IAAI,CAAC;EACtBA,CAAC,IAAI,EAAE;EAEP,IAAIH,MAAM,GAAG,IAAIsB,MAAM,CAAC,EAAE,CAAC;EAC3BtB,MAAM,CAACuB,UAAU,CAACpB,CAAC,EAAE,CAAC,CAAC;EAEvB,IAAI,CAACN,CAAC,CAAC2B,QAAQ,CAAC,EAAE,CAAC,CAACC,IAAI,CAACzB,MAAM,EAAE,CAAC,CAAC;EACnC,IAAI,CAACF,CAAC,CAAC0B,QAAQ,CAAC,EAAE,CAAC,CAACC,IAAI,CAACzB,MAAM,EAAE,EAAE,CAAC;EAEpC,OAAOA,MAAM;AACf,CAAC;AAEDJ,WAAW,CAACwB,SAAS,CAACM,KAAK,GAAG,YAAY;EACxC,IAAIC,GAAG,GAAG,IAAI,CAAC9B,CAAC,CAAC+B,YAAY,CAAC,CAAC;EAC/B,IAAIC,GAAG,GAAG,IAAI,CAAC/B,CAAC,CAAC8B,YAAY,CAAC,CAAC;EAE/B,IAAIE,QAAQ,GAAG,EAAE;;EAEjB;EACAA,QAAQ,CAACC,IAAI,CAAC,IAAI,EAAEJ,GAAG,CAACzB,MAAM,CAAC;EAC/B4B,QAAQ,GAAGA,QAAQ,CAACE,MAAM,CAACL,GAAG,CAAC;;EAE/B;EACAG,QAAQ,CAACC,IAAI,CAAC,IAAI,EAAEF,GAAG,CAAC3B,MAAM,CAAC;EAC/B4B,QAAQ,GAAGA,QAAQ,CAACE,MAAM,CAACH,GAAG,CAAC;;EAE/B;EACAC,QAAQ,CAACG,OAAO,CAAC,IAAI,EAAEH,QAAQ,CAAC5B,MAAM,CAAC;EAEvC,OAAO,IAAIoB,MAAM,CAACQ,QAAQ,CAAC;AAC7B,CAAC;AAEDlC,WAAW,CAACwB,SAAS,CAACc,iBAAiB,GAAG,UAAUhB,QAAQ,EAAE;EAC5D,IAAIiB,cAAc,GAAG,IAAIb,MAAM,CAAC,CAAC,CAAC;EAClCa,cAAc,CAACZ,UAAU,CAACL,QAAQ,EAAE,CAAC,CAAC;EAEtC,OAAOI,MAAM,CAACU,MAAM,CAAC,CAAC,IAAI,CAACN,KAAK,CAAC,CAAC,EAAES,cAAc,CAAC,CAAC;AACtD,CAAC;AAEDC,MAAM,CAACC,OAAO,GAAGzC,WAAW","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}