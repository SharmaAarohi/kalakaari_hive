{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n    return _arr;\n  }\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\nvar _get = require(\"lodash/get\");\nvar _get2 = _interopRequireDefault(_get);\nvar _ecc = require(\"./auth/ecc\");\nvar _config = require(\"./config\");\nvar _config2 = _interopRequireDefault(_config);\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nmodule.exports = function (hiveAPI) {\n  function numberWithCommas(x) {\n    return x.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  }\n\n  // Deprecating - Replacement: vestingHive\n  function vestingSteem(account, gprops) {\n    var vests = parseFloat(account.vesting_shares.split(\" \")[0]);\n    var total_vests = parseFloat(gprops.total_vesting_shares.split(\" \")[0]);\n    var total_vest_hive = parseFloat(gprops['total_vesting_fund_hive'].split(\" \")[0]);\n    var vesting_hivef = total_vest_hive * (vests / total_vests);\n    return vesting_hivef;\n  }\n  var vestingHive = vestingSteem;\n  function processOrders(open_orders, assetPrecision) {\n    var hbdOrders = !open_orders ? 0 : open_orders.reduce(function (o, order) {\n      if (order.sell_price.base.indexOf(\"HBD\") !== -1) {\n        o += order.for_sale;\n      }\n      return o;\n    }, 0) / assetPrecision;\n    var hiveOrders = !open_orders ? 0 : open_orders.reduce(function (o, order) {\n      if (order.sell_price.base.indexOf(\"HIVE\") !== -1) {\n        o += order.for_sale;\n      }\n      return o;\n    }, 0) / assetPrecision;\n    return {\n      hiveOrders: hiveOrders,\n      hbdOrders: hbdOrders\n    };\n  }\n  function calculateSaving(savings_withdraws) {\n    var savings_pending = 0;\n    var savings_hbd_pending = 0;\n    savings_withdraws.forEach(function (withdraw) {\n      var _withdraw$amount$spli = withdraw.amount.split(\" \"),\n        _withdraw$amount$spli2 = _slicedToArray(_withdraw$amount$spli, 2),\n        amount = _withdraw$amount$spli2[0],\n        asset = _withdraw$amount$spli2[1];\n      if (asset === \"HIVE\") savings_pending += parseFloat(amount);else {\n        if (asset === \"HBD\") savings_hbd_pending += parseFloat(amount);\n      }\n    });\n    return {\n      savings_pending: savings_pending,\n      savings_hbd_pending: savings_hbd_pending\n    };\n  }\n\n  // Deprecating - Replacement: pricePerHive\n  function pricePerSteem(feed_price) {\n    var price_per_hive = undefined;\n    var base = feed_price.base,\n      quote = feed_price.quote;\n    if (/ HBD$/.test(base) && / HIVE$/.test(quote)) {\n      price_per_hive = parseFloat(base.split(\" \")[0]) / parseFloat(quote.split(\" \")[0]);\n    }\n    return price_per_hive;\n  }\n  var pricePerHive = pricePerSteem;\n\n  // TODO: remove vesting_steem\n  function estimateAccountValue(account) {\n    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      gprops = _ref.gprops,\n      feed_price = _ref.feed_price,\n      open_orders = _ref.open_orders,\n      savings_withdraws = _ref.savings_withdraws,\n      vesting_steem = _ref.vesting_steem,\n      vesting_hive = _ref.vesting_hive;\n    var promises = [];\n    var username = account.name;\n    var assetPrecision = 1000;\n    var orders = void 0,\n      savings = void 0;\n\n    // TODO: remove vesting_steem\n    // this is necessary to work with unbranded apis\n    if (vesting_steem) {\n      vesting_hive = vesting_steem;\n    }\n    if (!vesting_hive || !feed_price) {\n      if (!gprops || !feed_price) {\n        promises.push(hiveAPI.getStateAsync(\"/@\" + username).then(function (data) {\n          gprops = data.props;\n          feed_price = data.feed_price;\n          vesting_hive = vestingHive(account, gprops);\n        }));\n      } else {\n        vesting_hive = vestingHive(account, gprops);\n      }\n    }\n    if (!open_orders) {\n      promises.push(hiveAPI.getOpenOrdersAsync(username).then(function (open_orders) {\n        orders = processOrders(open_orders, assetPrecision);\n      }));\n    } else {\n      orders = processOrders(open_orders, assetPrecision);\n    }\n    if (!savings_withdraws) {\n      promises.push(hiveAPI.getSavingsWithdrawFromAsync(username).then(function (savings_withdraws) {\n        savings = calculateSaving(savings_withdraws);\n      }));\n    } else {\n      savings = calculateSaving(savings_withdraws);\n    }\n    return Promise.all(promises).then(function () {\n      var price_per_hive = pricePerHive(feed_price);\n      var savings_balance = account.savings_balance;\n      var savings_hbd_balance = account[\"savings_hbd_balance\"];\n      var balance_hive = parseFloat(account.balance.split(\" \")[0]);\n      var saving_balance_hive = parseFloat(savings_balance.split(\" \")[0]);\n      var hbd_balance = parseFloat(account[\"hbd_balance\"]);\n      var hbd_balance_savings = parseFloat(savings_hbd_balance.split(\" \")[0]);\n      var conversionValue = 0;\n      var currentTime = new Date().getTime();\n      (account.other_history || []).reduce(function (out, item) {\n        if ((0, _get2.default)(item, [1, \"op\", 0], \"\") !== \"convert\") return out;\n        var timestamp = new Date((0, _get2.default)(item, [1, \"timestamp\"])).getTime();\n        var finishTime = timestamp + 86400000 * 3.5; // add 3.5day conversion delay\n        if (finishTime < currentTime) return out;\n        var amount = parseFloat((0, _get2.default)(item, [1, \"op\", 1, \"amount\"]).replace(\" HBD\", \"\"));\n        conversionValue += amount;\n      }, []);\n      var total_hbd = hbd_balance + hbd_balance_savings + savings.savings_hbd_pending + orders.hbdOrders + conversionValue;\n      var total_hive = vesting_hive + balance_hive + saving_balance_hive + savings.savings_pending + orders.hiveOrders;\n      return (total_hive * price_per_hive + total_hbd).toFixed(2);\n    });\n  }\n  function createSuggestedPassword() {\n    var PASSWORD_LENGTH = 32;\n    var privateKey = _ecc.key_utils.get_random_key();\n    return privateKey.toWif().substring(3, 3 + PASSWORD_LENGTH);\n  }\n  return {\n    reputation: function reputation(_reputation) {\n      if (_reputation == null) return _reputation;\n      var neg = _reputation < 0;\n      var rep = String(_reputation);\n      rep = neg ? rep.substring(1) : rep;\n      var v = Math.log10((rep > 0 ? rep : -rep) - 10) - 9;\n      v = neg ? -v : v;\n      return parseInt(v * 9 + 25);\n    },\n    // Deprecated - Remove on future releases\n    vestToSteem: function vestToSteem(vestingShares, totalVestingShares, totalVestingFundSteem) {\n      console.warn('vestToSteem() is deprecated and will be removed in the future releases. Use vestToHive() instead.');\n      return parseFloat(totalVestingFundSteem) * (parseFloat(vestingShares) / parseFloat(totalVestingShares));\n    },\n    // Same as vestToSteem\n    vestToHive: function vestToHive(vestingShares, totalVestingShares, totalVestingFundHive) {\n      return parseFloat(totalVestingFundHive) * (parseFloat(vestingShares) / parseFloat(totalVestingShares));\n    },\n    commentPermlink: function commentPermlink(parentAuthor, parentPermlink) {\n      var timeStr = new Date().toISOString().replace(/[^a-zA-Z0-9]+/g, \"\").toLowerCase();\n      parentPermlink = parentPermlink.replace(/(-\\d{8}t\\d{9}z)/g, \"\");\n      return (\"re-\" + parentAuthor + \"-\" + parentPermlink + \"-\" + timeStr).replace(\".\", \"\");\n    },\n    amount: function amount(_amount, asset) {\n      return _amount.toFixed(3) + \" \" + asset;\n    },\n    numberWithCommas: numberWithCommas,\n    vestingSteem: vestingSteem,\n    vestingHive: vestingHive,\n    estimateAccountValue: estimateAccountValue,\n    createSuggestedPassword: createSuggestedPassword,\n    pricePerSteem: pricePerSteem,\n    pricePerHive: pricePerHive\n  };\n};","map":{"version":3,"names":["_slicedToArray","sliceIterator","arr","i","_arr","_n","_d","_e","undefined","_i","Symbol","iterator","_s","next","done","push","value","length","err","Array","isArray","Object","TypeError","_get","require","_get2","_interopRequireDefault","_ecc","_config","_config2","obj","__esModule","default","module","exports","hiveAPI","numberWithCommas","x","replace","vestingSteem","account","gprops","vests","parseFloat","vesting_shares","split","total_vests","total_vesting_shares","total_vest_hive","vesting_hivef","vestingHive","processOrders","open_orders","assetPrecision","hbdOrders","reduce","o","order","sell_price","base","indexOf","for_sale","hiveOrders","calculateSaving","savings_withdraws","savings_pending","savings_hbd_pending","forEach","withdraw","_withdraw$amount$spli","amount","_withdraw$amount$spli2","asset","pricePerSteem","feed_price","price_per_hive","quote","test","pricePerHive","estimateAccountValue","_ref","arguments","vesting_steem","vesting_hive","promises","username","name","orders","savings","getStateAsync","then","data","props","getOpenOrdersAsync","getSavingsWithdrawFromAsync","Promise","all","savings_balance","savings_hbd_balance","balance_hive","balance","saving_balance_hive","hbd_balance","hbd_balance_savings","conversionValue","currentTime","Date","getTime","other_history","out","item","timestamp","finishTime","total_hbd","total_hive","toFixed","createSuggestedPassword","PASSWORD_LENGTH","privateKey","key_utils","get_random_key","toWif","substring","reputation","_reputation","neg","rep","String","v","Math","log10","parseInt","vestToSteem","vestingShares","totalVestingShares","totalVestingFundSteem","console","warn","vestToHive","totalVestingFundHive","commentPermlink","parentAuthor","parentPermlink","timeStr","toISOString","toLowerCase","_amount"],"sources":["C:/Users/sunil/kalakaari/node_modules/@hiveio/hive-js/lib/formatter.js"],"sourcesContent":["\"use strict\";\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _get = require(\"lodash/get\");\n\nvar _get2 = _interopRequireDefault(_get);\n\nvar _ecc = require(\"./auth/ecc\");\n\nvar _config = require(\"./config\");\n\nvar _config2 = _interopRequireDefault(_config);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nmodule.exports = function (hiveAPI) {\n  function numberWithCommas(x) {\n    return x.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  }\n\n  // Deprecating - Replacement: vestingHive\n  function vestingSteem(account, gprops) {\n    var vests = parseFloat(account.vesting_shares.split(\" \")[0]);\n    var total_vests = parseFloat(gprops.total_vesting_shares.split(\" \")[0]);\n    var total_vest_hive = parseFloat(gprops['total_vesting_fund_hive'].split(\" \")[0]);\n    var vesting_hivef = total_vest_hive * (vests / total_vests);\n    return vesting_hivef;\n  }\n  var vestingHive = vestingSteem;\n\n  function processOrders(open_orders, assetPrecision) {\n    var hbdOrders = !open_orders ? 0 : open_orders.reduce(function (o, order) {\n      if (order.sell_price.base.indexOf(\"HBD\") !== -1) {\n        o += order.for_sale;\n      }\n      return o;\n    }, 0) / assetPrecision;\n\n    var hiveOrders = !open_orders ? 0 : open_orders.reduce(function (o, order) {\n      if (order.sell_price.base.indexOf(\"HIVE\") !== -1) {\n        o += order.for_sale;\n      }\n      return o;\n    }, 0) / assetPrecision;\n\n    return { hiveOrders: hiveOrders, hbdOrders: hbdOrders };\n  }\n\n  function calculateSaving(savings_withdraws) {\n    var savings_pending = 0;\n    var savings_hbd_pending = 0;\n    savings_withdraws.forEach(function (withdraw) {\n      var _withdraw$amount$spli = withdraw.amount.split(\" \"),\n          _withdraw$amount$spli2 = _slicedToArray(_withdraw$amount$spli, 2),\n          amount = _withdraw$amount$spli2[0],\n          asset = _withdraw$amount$spli2[1];\n\n      if (asset === \"HIVE\") savings_pending += parseFloat(amount);else {\n        if (asset === \"HBD\") savings_hbd_pending += parseFloat(amount);\n      }\n    });\n    return { savings_pending: savings_pending, savings_hbd_pending: savings_hbd_pending };\n  }\n\n  // Deprecating - Replacement: pricePerHive\n  function pricePerSteem(feed_price) {\n    var price_per_hive = undefined;\n    var base = feed_price.base,\n        quote = feed_price.quote;\n\n    if (/ HBD$/.test(base) && / HIVE$/.test(quote)) {\n      price_per_hive = parseFloat(base.split(\" \")[0]) / parseFloat(quote.split(\" \")[0]);\n    }\n    return price_per_hive;\n  }\n  var pricePerHive = pricePerSteem;\n\n  // TODO: remove vesting_steem\n  function estimateAccountValue(account) {\n    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n        gprops = _ref.gprops,\n        feed_price = _ref.feed_price,\n        open_orders = _ref.open_orders,\n        savings_withdraws = _ref.savings_withdraws,\n        vesting_steem = _ref.vesting_steem,\n        vesting_hive = _ref.vesting_hive;\n\n    var promises = [];\n    var username = account.name;\n    var assetPrecision = 1000;\n    var orders = void 0,\n        savings = void 0;\n\n    // TODO: remove vesting_steem\n    // this is necessary to work with unbranded apis\n    if (vesting_steem) {\n      vesting_hive = vesting_steem;\n    }\n    if (!vesting_hive || !feed_price) {\n      if (!gprops || !feed_price) {\n        promises.push(hiveAPI.getStateAsync(\"/@\" + username).then(function (data) {\n          gprops = data.props;\n          feed_price = data.feed_price;\n          vesting_hive = vestingHive(account, gprops);\n        }));\n      } else {\n        vesting_hive = vestingHive(account, gprops);\n      }\n    }\n\n    if (!open_orders) {\n      promises.push(hiveAPI.getOpenOrdersAsync(username).then(function (open_orders) {\n        orders = processOrders(open_orders, assetPrecision);\n      }));\n    } else {\n      orders = processOrders(open_orders, assetPrecision);\n    }\n\n    if (!savings_withdraws) {\n      promises.push(hiveAPI.getSavingsWithdrawFromAsync(username).then(function (savings_withdraws) {\n        savings = calculateSaving(savings_withdraws);\n      }));\n    } else {\n      savings = calculateSaving(savings_withdraws);\n    }\n\n    return Promise.all(promises).then(function () {\n      var price_per_hive = pricePerHive(feed_price);\n\n      var savings_balance = account.savings_balance;\n      var savings_hbd_balance = account[\"savings_hbd_balance\"];\n      var balance_hive = parseFloat(account.balance.split(\" \")[0]);\n      var saving_balance_hive = parseFloat(savings_balance.split(\" \")[0]);\n      var hbd_balance = parseFloat(account[\"hbd_balance\"]);\n      var hbd_balance_savings = parseFloat(savings_hbd_balance.split(\" \")[0]);\n\n      var conversionValue = 0;\n      var currentTime = new Date().getTime();\n      (account.other_history || []).reduce(function (out, item) {\n        if ((0, _get2.default)(item, [1, \"op\", 0], \"\") !== \"convert\") return out;\n\n        var timestamp = new Date((0, _get2.default)(item, [1, \"timestamp\"])).getTime();\n        var finishTime = timestamp + 86400000 * 3.5; // add 3.5day conversion delay\n        if (finishTime < currentTime) return out;\n\n        var amount = parseFloat((0, _get2.default)(item, [1, \"op\", 1, \"amount\"]).replace(\" HBD\", \"\"));\n        conversionValue += amount;\n      }, []);\n\n      var total_hbd = hbd_balance + hbd_balance_savings + savings.savings_hbd_pending + orders.hbdOrders + conversionValue;\n\n      var total_hive = vesting_hive + balance_hive + saving_balance_hive + savings.savings_pending + orders.hiveOrders;\n\n      return (total_hive * price_per_hive + total_hbd).toFixed(2);\n    });\n  }\n\n  function createSuggestedPassword() {\n    var PASSWORD_LENGTH = 32;\n    var privateKey = _ecc.key_utils.get_random_key();\n    return privateKey.toWif().substring(3, 3 + PASSWORD_LENGTH);\n  }\n\n  return {\n    reputation: function reputation(_reputation) {\n      if (_reputation == null) return _reputation;\n      var neg = _reputation < 0;\n      var rep = String(_reputation);\n      rep = neg ? rep.substring(1) : rep;\n      var v = Math.log10((rep > 0 ? rep : -rep) - 10) - 9;\n      v = neg ? -v : v;\n      return parseInt(v * 9 + 25);\n    },\n\n    // Deprecated - Remove on future releases\n    vestToSteem: function vestToSteem(vestingShares, totalVestingShares, totalVestingFundSteem) {\n      console.warn('vestToSteem() is deprecated and will be removed in the future releases. Use vestToHive() instead.');\n      return parseFloat(totalVestingFundSteem) * (parseFloat(vestingShares) / parseFloat(totalVestingShares));\n    },\n\n    // Same as vestToSteem\n    vestToHive: function vestToHive(vestingShares, totalVestingShares, totalVestingFundHive) {\n      return parseFloat(totalVestingFundHive) * (parseFloat(vestingShares) / parseFloat(totalVestingShares));\n    },\n\n    commentPermlink: function commentPermlink(parentAuthor, parentPermlink) {\n      var timeStr = new Date().toISOString().replace(/[^a-zA-Z0-9]+/g, \"\").toLowerCase();\n      parentPermlink = parentPermlink.replace(/(-\\d{8}t\\d{9}z)/g, \"\");\n      return (\"re-\" + parentAuthor + \"-\" + parentPermlink + \"-\" + timeStr).replace(\".\", \"\");\n    },\n\n    amount: function amount(_amount, asset) {\n      return _amount.toFixed(3) + \" \" + asset;\n    },\n    numberWithCommas: numberWithCommas,\n    vestingSteem: vestingSteem,\n    vestingHive: vestingHive,\n    estimateAccountValue: estimateAccountValue,\n    createSuggestedPassword: createSuggestedPassword,\n    pricePerSteem: pricePerSteem,\n    pricePerHive: pricePerHive\n  };\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}