{"ast":null,"code":"'use strict';\n\nvar PrivateKey = require('./key_private');\nvar hash = require('./hash');\nvar secureRandom = require('secure-random');\n\n// hash for .25 second\nvar HASH_POWER_MILLS = 250;\nvar entropyPos = 0,\n  entropyCount = 0;\nvar entropyArray = secureRandom.randomBuffer(101);\nmodule.exports = {\n  addEntropy: function addEntropy() {\n    entropyCount++;\n    for (var _len = arguments.length, ints = Array(_len), _key = 0; _key < _len; _key++) {\n      ints[_key] = arguments[_key];\n    }\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n    try {\n      for (var _iterator = ints[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var i = _step.value;\n        var pos = entropyPos++ % 101;\n        var i2 = entropyArray[pos] += i;\n        if (i2 > 9007199254740991) entropyArray[pos] = 0;\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator.return) {\n          _iterator.return();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n  },\n  /**\n      A week random number generator can run out of entropy.  This should ensure even the worst random number implementation will be reasonably safe.\n       @param1 string entropy of at least 32 bytes\n  */\n  random32ByteBuffer: function random32ByteBuffer() {\n    var entropy = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.browserEntropy();\n    if (!(typeof entropy === 'string')) {\n      throw new Error(\"string required for entropy\");\n    }\n    if (entropy.length < 32) {\n      throw new Error(\"expecting at least 32 bytes of entropy\");\n    }\n    var start_t = Date.now();\n    while (Date.now() - start_t < HASH_POWER_MILLS) {\n      entropy = hash.sha256(entropy);\n    }\n    var hash_array = [];\n    hash_array.push(entropy);\n\n    // Hashing for 1 second may helps the computer is not low on entropy (this method may be called back-to-back).\n    hash_array.push(secureRandom.randomBuffer(32));\n    return hash.sha256(Buffer.concat(hash_array));\n  },\n  get_random_key: function get_random_key(entropy) {\n    return PrivateKey.fromBuffer(this.random32ByteBuffer(entropy));\n  },\n  // Turn invisible space like characters into a single space\n  // normalize_brain_key(brain_key){\n  //     if (!(typeof brain_key === 'string')) {\n  //         throw new Error(\"string required for brain_key\");\n  //     }\n  //     brain_key = brain_key.trim();\n  //     return brain_key.split(/[\\t\\n\\v\\f\\r ]+/).join(' ');\n  // },\n\n  browserEntropy: function browserEntropy() {\n    var entropyStr = Array(entropyArray).join();\n    try {\n      entropyStr += new Date().toString() + \" \" + window.screen.height + \" \" + window.screen.width + \" \" + window.screen.colorDepth + \" \" + \" \" + window.screen.availHeight + \" \" + window.screen.availWidth + \" \" + window.screen.pixelDepth + navigator.language + \" \" + window.location + \" \" + window.history.length;\n      for (var i = 0, mimeType; i < navigator.mimeTypes.length; i++) {\n        mimeType = navigator.mimeTypes[i];\n        entropyStr += mimeType.description + \" \" + mimeType.type + \" \" + mimeType.suffixes + \" \";\n      }\n      console.log(\"INFO\\tbrowserEntropy gathered\", entropyCount, 'events');\n    } catch (error) {\n      //nodejs:ReferenceError: window is not defined\n      entropyStr += hash.sha256(new Date().toString());\n    }\n    var b = new Buffer(entropyStr);\n    entropyStr += b.toString('binary') + \" \" + new Date().toString();\n    return entropyStr;\n  }\n};","map":{"version":3,"names":["PrivateKey","require","hash","secureRandom","HASH_POWER_MILLS","entropyPos","entropyCount","entropyArray","randomBuffer","module","exports","addEntropy","_len","arguments","length","ints","Array","_key","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_iterator","Symbol","iterator","_step","next","done","i","value","pos","i2","err","return","random32ByteBuffer","entropy","browserEntropy","Error","start_t","Date","now","sha256","hash_array","push","Buffer","concat","get_random_key","fromBuffer","entropyStr","join","toString","window","screen","height","width","colorDepth","availHeight","availWidth","pixelDepth","navigator","language","location","history","mimeType","mimeTypes","description","type","suffixes","console","log","error","b"],"sources":["C:/Users/sunil/kalakaari/node_modules/@hiveio/hive-js/lib/auth/ecc/src/key_utils.js"],"sourcesContent":["'use strict';\n\nvar PrivateKey = require('./key_private');\nvar hash = require('./hash');\nvar secureRandom = require('secure-random');\n\n// hash for .25 second\nvar HASH_POWER_MILLS = 250;\n\nvar entropyPos = 0,\n    entropyCount = 0;\nvar entropyArray = secureRandom.randomBuffer(101);\n\nmodule.exports = {\n    addEntropy: function addEntropy() {\n        entropyCount++;\n\n        for (var _len = arguments.length, ints = Array(_len), _key = 0; _key < _len; _key++) {\n            ints[_key] = arguments[_key];\n        }\n\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n            for (var _iterator = ints[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                var i = _step.value;\n\n                var pos = entropyPos++ % 101;\n                var i2 = entropyArray[pos] += i;\n                if (i2 > 9007199254740991) entropyArray[pos] = 0;\n            }\n        } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n        } finally {\n            try {\n                if (!_iteratorNormalCompletion && _iterator.return) {\n                    _iterator.return();\n                }\n            } finally {\n                if (_didIteratorError) {\n                    throw _iteratorError;\n                }\n            }\n        }\n    },\n\n\n    /**\n        A week random number generator can run out of entropy.  This should ensure even the worst random number implementation will be reasonably safe.\n         @param1 string entropy of at least 32 bytes\n    */\n    random32ByteBuffer: function random32ByteBuffer() {\n        var entropy = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.browserEntropy();\n\n\n        if (!(typeof entropy === 'string')) {\n            throw new Error(\"string required for entropy\");\n        }\n\n        if (entropy.length < 32) {\n            throw new Error(\"expecting at least 32 bytes of entropy\");\n        }\n\n        var start_t = Date.now();\n\n        while (Date.now() - start_t < HASH_POWER_MILLS) {\n            entropy = hash.sha256(entropy);\n        }var hash_array = [];\n        hash_array.push(entropy);\n\n        // Hashing for 1 second may helps the computer is not low on entropy (this method may be called back-to-back).\n        hash_array.push(secureRandom.randomBuffer(32));\n\n        return hash.sha256(Buffer.concat(hash_array));\n    },\n    get_random_key: function get_random_key(entropy) {\n        return PrivateKey.fromBuffer(this.random32ByteBuffer(entropy));\n    },\n\n\n    // Turn invisible space like characters into a single space\n    // normalize_brain_key(brain_key){\n    //     if (!(typeof brain_key === 'string')) {\n    //         throw new Error(\"string required for brain_key\");\n    //     }\n    //     brain_key = brain_key.trim();\n    //     return brain_key.split(/[\\t\\n\\v\\f\\r ]+/).join(' ');\n    // },\n\n    browserEntropy: function browserEntropy() {\n        var entropyStr = Array(entropyArray).join();\n        try {\n            entropyStr += new Date().toString() + \" \" + window.screen.height + \" \" + window.screen.width + \" \" + window.screen.colorDepth + \" \" + \" \" + window.screen.availHeight + \" \" + window.screen.availWidth + \" \" + window.screen.pixelDepth + navigator.language + \" \" + window.location + \" \" + window.history.length;\n\n            for (var i = 0, mimeType; i < navigator.mimeTypes.length; i++) {\n                mimeType = navigator.mimeTypes[i];\n                entropyStr += mimeType.description + \" \" + mimeType.type + \" \" + mimeType.suffixes + \" \";\n            }\n            console.log(\"INFO\\tbrowserEntropy gathered\", entropyCount, 'events');\n        } catch (error) {\n            //nodejs:ReferenceError: window is not defined\n            entropyStr += hash.sha256(new Date().toString());\n        }\n\n        var b = new Buffer(entropyStr);\n        entropyStr += b.toString('binary') + \" \" + new Date().toString();\n        return entropyStr;\n    }\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}