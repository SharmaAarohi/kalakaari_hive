{"ast":null,"code":"'use strict';\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nvar ecdsa = require('./ecdsa');\nvar hash = require('./hash');\nvar curve = require('ecurve').getCurveByName('secp256k1');\nvar assert = require('assert');\nvar BigInteger = require('bigi');\nvar PublicKey = require('./key_public');\nvar PrivateKey = require('./key_private');\nvar Signature = function () {\n  function Signature(r1, s1, i1) {\n    _classCallCheck(this, Signature);\n    this.r = r1;\n    this.s = s1;\n    this.i = i1;\n    assert.equal(this.r != null, true, 'Missing parameter');\n    assert.equal(this.s != null, true, 'Missing parameter');\n    assert.equal(this.i != null, true, 'Missing parameter');\n  }\n  _createClass(Signature, [{\n    key: 'toBuffer',\n    value: function toBuffer() {\n      var buf;\n      buf = new Buffer(65);\n      buf.writeUInt8(this.i, 0);\n      this.r.toBuffer(32).copy(buf, 1);\n      this.s.toBuffer(32).copy(buf, 33);\n      return buf;\n    }\n  }, {\n    key: 'recoverPublicKeyFromBuffer',\n    value: function recoverPublicKeyFromBuffer(buffer) {\n      return this.recoverPublicKey(hash.sha256(buffer));\n    }\n  }, {\n    key: 'recoverPublicKey',\n    /**\n        @return {PublicKey}\n    */\n    value: function recoverPublicKey(sha256_buffer) {\n      var Q = void 0,\n        e = void 0,\n        i = void 0;\n      e = BigInteger.fromBuffer(sha256_buffer);\n      i = this.i;\n      i -= 27;\n      i = i & 3;\n      Q = ecdsa.recoverPubKey(curve, e, this, i);\n      return PublicKey.fromPoint(Q);\n    }\n  }, {\n    key: 'verifyBuffer',\n    /**\n        @param {Buffer} un-hashed\n        @param {./PublicKey}\n        @return {boolean}\n    */\n    value: function verifyBuffer(buf, public_key) {\n      var _hash = hash.sha256(buf);\n      return this.verifyHash(_hash, public_key);\n    }\n  }, {\n    key: 'verifyHash',\n    value: function verifyHash(hash, public_key) {\n      assert.equal(hash.length, 32, \"A SHA 256 should be 32 bytes long, instead got \" + hash.length);\n      return ecdsa.verify(curve, hash, {\n        r: this.r,\n        s: this.s\n      }, public_key.Q);\n    }\n  }, {\n    key: 'toHex',\n    value: function toHex() {\n      return this.toBuffer().toString(\"hex\");\n    }\n  }, {\n    key: 'verifyHex',\n    value: function verifyHex(hex, public_key) {\n      var buf;\n      buf = new Buffer(hex, 'hex');\n      return this.verifyBuffer(buf, public_key);\n    }\n  }], [{\n    key: 'fromBuffer',\n    value: function fromBuffer(buf) {\n      var i, r, s;\n      assert.equal(buf.length, 65, 'Invalid signature length');\n      i = buf.readUInt8(0);\n      assert.equal(i - 27, i - 27 & 7, 'Invalid signature parameter');\n      r = BigInteger.fromBuffer(buf.slice(1, 33));\n      s = BigInteger.fromBuffer(buf.slice(33));\n      return new Signature(r, s, i);\n    }\n  }, {\n    key: 'signBuffer',\n    /**\n        @param {Buffer} buf\n        @param {PrivateKey} private_key\n        @return {Signature}\n    */\n    value: function signBuffer(buf, private_key) {\n      var _hash = hash.sha256(buf);\n      return Signature.signBufferSha256(_hash, private_key);\n    }\n\n    /** Sign a buffer of exactally 32 bytes in size (sha256(text))\n        @param {Buffer} buf - 32 bytes binary\n        @param {PrivateKey} private_key\n        @return {Signature}\n    */\n  }, {\n    key: 'signBufferSha256',\n    value: function signBufferSha256(buf_sha256, private_key) {\n      if (buf_sha256.length !== 32 || !Buffer.isBuffer(buf_sha256)) throw new Error(\"buf_sha256: 32 byte buffer requred\");\n      private_key = toPrivateObj(private_key);\n      assert(private_key, 'private_key required');\n      var der, e, ecsignature, i, lenR, lenS, nonce;\n      i = null;\n      nonce = 0;\n      e = BigInteger.fromBuffer(buf_sha256);\n      while (true) {\n        ecsignature = ecdsa.sign(curve, buf_sha256, private_key.d, nonce++);\n        der = ecsignature.toDER();\n        lenR = der[3];\n        lenS = der[5 + lenR];\n        if (lenR === 32 && lenS === 32) {\n          i = ecdsa.calcPubKeyRecoveryParam(curve, e, ecsignature, private_key.toPublicKey().Q);\n          i += 4; // compressed\n          i += 27; // compact  //  24 or 27 :( forcing odd-y 2nd key candidate)\n          break;\n        }\n        if (nonce % 10 === 0) {\n          console.log(\"WARN: \" + nonce + \" attempts to find canonical signature\");\n        }\n      }\n      return new Signature(ecsignature.r, ecsignature.s, i);\n    }\n  }, {\n    key: 'sign',\n    value: function sign(string, private_key) {\n      return Signature.signBuffer(new Buffer(string), private_key);\n    }\n  }, {\n    key: 'fromHex',\n    // toByteBuffer() {\n    //     var b;\n    //     b = new ByteBuffer(ByteBuffer.DEFAULT_CAPACITY, ByteBuffer.LITTLE_ENDIAN);\n    //     this.appendByteBuffer(b);\n    //     return b.copy(0, b.offset);\n    // };\n\n    value: function fromHex(hex) {\n      return Signature.fromBuffer(new Buffer(hex, \"hex\"));\n    }\n  }, {\n    key: 'signHex',\n    value: function signHex(hex, private_key) {\n      var buf;\n      buf = new Buffer(hex, 'hex');\n      return Signature.signBuffer(buf, private_key);\n    }\n  }]);\n  return Signature;\n}();\nvar toPrivateObj = function toPrivateObj(o) {\n  return o ? o.d ? o : PrivateKey.fromWif(o) : o /*null or undefined*/;\n};\nmodule.exports = Signature;","map":{"version":3,"names":["_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","Constructor","protoProps","staticProps","prototype","_classCallCheck","instance","TypeError","ecdsa","require","hash","curve","getCurveByName","assert","BigInteger","PublicKey","PrivateKey","Signature","r1","s1","i1","r","s","equal","value","toBuffer","buf","Buffer","writeUInt8","copy","recoverPublicKeyFromBuffer","buffer","recoverPublicKey","sha256","sha256_buffer","Q","e","fromBuffer","recoverPubKey","fromPoint","verifyBuffer","public_key","_hash","verifyHash","verify","toHex","toString","verifyHex","hex","readUInt8","slice","signBuffer","private_key","signBufferSha256","buf_sha256","isBuffer","Error","toPrivateObj","der","ecsignature","lenR","lenS","nonce","sign","d","toDER","calcPubKeyRecoveryParam","toPublicKey","console","log","string","fromHex","signHex","o","fromWif","module","exports"],"sources":["C:/Users/sunil/kalakaari/node_modules/@hiveio/hive-js/lib/auth/ecc/src/signature.js"],"sourcesContent":["'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar ecdsa = require('./ecdsa');\nvar hash = require('./hash');\nvar curve = require('ecurve').getCurveByName('secp256k1');\nvar assert = require('assert');\nvar BigInteger = require('bigi');\nvar PublicKey = require('./key_public');\nvar PrivateKey = require('./key_private');\n\nvar Signature = function () {\n    function Signature(r1, s1, i1) {\n        _classCallCheck(this, Signature);\n\n        this.r = r1;\n        this.s = s1;\n        this.i = i1;\n        assert.equal(this.r != null, true, 'Missing parameter');\n        assert.equal(this.s != null, true, 'Missing parameter');\n        assert.equal(this.i != null, true, 'Missing parameter');\n    }\n\n    _createClass(Signature, [{\n        key: 'toBuffer',\n        value: function toBuffer() {\n            var buf;\n            buf = new Buffer(65);\n            buf.writeUInt8(this.i, 0);\n            this.r.toBuffer(32).copy(buf, 1);\n            this.s.toBuffer(32).copy(buf, 33);\n            return buf;\n        }\n    }, {\n        key: 'recoverPublicKeyFromBuffer',\n        value: function recoverPublicKeyFromBuffer(buffer) {\n            return this.recoverPublicKey(hash.sha256(buffer));\n        }\n    }, {\n        key: 'recoverPublicKey',\n\n\n        /**\n            @return {PublicKey}\n        */\n        value: function recoverPublicKey(sha256_buffer) {\n            var Q = void 0,\n                e = void 0,\n                i = void 0;\n            e = BigInteger.fromBuffer(sha256_buffer);\n            i = this.i;\n            i -= 27;\n            i = i & 3;\n            Q = ecdsa.recoverPubKey(curve, e, this, i);\n            return PublicKey.fromPoint(Q);\n        }\n    }, {\n        key: 'verifyBuffer',\n\n\n        /**\n            @param {Buffer} un-hashed\n            @param {./PublicKey}\n            @return {boolean}\n        */\n        value: function verifyBuffer(buf, public_key) {\n            var _hash = hash.sha256(buf);\n            return this.verifyHash(_hash, public_key);\n        }\n    }, {\n        key: 'verifyHash',\n        value: function verifyHash(hash, public_key) {\n            assert.equal(hash.length, 32, \"A SHA 256 should be 32 bytes long, instead got \" + hash.length);\n            return ecdsa.verify(curve, hash, {\n                r: this.r,\n                s: this.s\n            }, public_key.Q);\n        }\n    }, {\n        key: 'toHex',\n        value: function toHex() {\n            return this.toBuffer().toString(\"hex\");\n        }\n    }, {\n        key: 'verifyHex',\n        value: function verifyHex(hex, public_key) {\n            var buf;\n            buf = new Buffer(hex, 'hex');\n            return this.verifyBuffer(buf, public_key);\n        }\n    }], [{\n        key: 'fromBuffer',\n        value: function fromBuffer(buf) {\n            var i, r, s;\n            assert.equal(buf.length, 65, 'Invalid signature length');\n            i = buf.readUInt8(0);\n            assert.equal(i - 27, i - 27 & 7, 'Invalid signature parameter');\n            r = BigInteger.fromBuffer(buf.slice(1, 33));\n            s = BigInteger.fromBuffer(buf.slice(33));\n            return new Signature(r, s, i);\n        }\n    }, {\n        key: 'signBuffer',\n\n\n        /**\n            @param {Buffer} buf\n            @param {PrivateKey} private_key\n            @return {Signature}\n        */\n        value: function signBuffer(buf, private_key) {\n            var _hash = hash.sha256(buf);\n            return Signature.signBufferSha256(_hash, private_key);\n        }\n\n        /** Sign a buffer of exactally 32 bytes in size (sha256(text))\n            @param {Buffer} buf - 32 bytes binary\n            @param {PrivateKey} private_key\n            @return {Signature}\n        */\n\n    }, {\n        key: 'signBufferSha256',\n        value: function signBufferSha256(buf_sha256, private_key) {\n            if (buf_sha256.length !== 32 || !Buffer.isBuffer(buf_sha256)) throw new Error(\"buf_sha256: 32 byte buffer requred\");\n            private_key = toPrivateObj(private_key);\n            assert(private_key, 'private_key required');\n\n            var der, e, ecsignature, i, lenR, lenS, nonce;\n            i = null;\n            nonce = 0;\n            e = BigInteger.fromBuffer(buf_sha256);\n            while (true) {\n                ecsignature = ecdsa.sign(curve, buf_sha256, private_key.d, nonce++);\n                der = ecsignature.toDER();\n                lenR = der[3];\n                lenS = der[5 + lenR];\n                if (lenR === 32 && lenS === 32) {\n                    i = ecdsa.calcPubKeyRecoveryParam(curve, e, ecsignature, private_key.toPublicKey().Q);\n                    i += 4; // compressed\n                    i += 27; // compact  //  24 or 27 :( forcing odd-y 2nd key candidate)\n                    break;\n                }\n                if (nonce % 10 === 0) {\n                    console.log(\"WARN: \" + nonce + \" attempts to find canonical signature\");\n                }\n            }\n            return new Signature(ecsignature.r, ecsignature.s, i);\n        }\n    }, {\n        key: 'sign',\n        value: function sign(string, private_key) {\n            return Signature.signBuffer(new Buffer(string), private_key);\n        }\n    }, {\n        key: 'fromHex',\n\n\n        // toByteBuffer() {\n        //     var b;\n        //     b = new ByteBuffer(ByteBuffer.DEFAULT_CAPACITY, ByteBuffer.LITTLE_ENDIAN);\n        //     this.appendByteBuffer(b);\n        //     return b.copy(0, b.offset);\n        // };\n\n        value: function fromHex(hex) {\n            return Signature.fromBuffer(new Buffer(hex, \"hex\"));\n        }\n    }, {\n        key: 'signHex',\n        value: function signHex(hex, private_key) {\n            var buf;\n            buf = new Buffer(hex, 'hex');\n            return Signature.signBuffer(buf, private_key);\n        }\n    }]);\n\n    return Signature;\n}();\n\nvar toPrivateObj = function toPrivateObj(o) {\n    return o ? o.d ? o : PrivateKey.fromWif(o) : o /*null or undefined*/;\n};\nmodule.exports = Signature;"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,YAAY,GAAG,YAAY;EAAE,SAASC,gBAAgBA,CAACC,MAAM,EAAEC,KAAK,EAAE;IAAE,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,KAAK,CAACE,MAAM,EAAED,CAAC,EAAE,EAAE;MAAE,IAAIE,UAAU,GAAGH,KAAK,CAACC,CAAC,CAAC;MAAEE,UAAU,CAACC,UAAU,GAAGD,UAAU,CAACC,UAAU,IAAI,KAAK;MAAED,UAAU,CAACE,YAAY,GAAG,IAAI;MAAE,IAAI,OAAO,IAAIF,UAAU,EAAEA,UAAU,CAACG,QAAQ,GAAG,IAAI;MAAEC,MAAM,CAACC,cAAc,CAACT,MAAM,EAAEI,UAAU,CAACM,GAAG,EAAEN,UAAU,CAAC;IAAE;EAAE;EAAE,OAAO,UAAUO,WAAW,EAAEC,UAAU,EAAEC,WAAW,EAAE;IAAE,IAAID,UAAU,EAAEb,gBAAgB,CAACY,WAAW,CAACG,SAAS,EAAEF,UAAU,CAAC;IAAE,IAAIC,WAAW,EAAEd,gBAAgB,CAACY,WAAW,EAAEE,WAAW,CAAC;IAAE,OAAOF,WAAW;EAAE,CAAC;AAAE,CAAC,CAAC,CAAC;AAEnjB,SAASI,eAAeA,CAACC,QAAQ,EAAEL,WAAW,EAAE;EAAE,IAAI,EAAEK,QAAQ,YAAYL,WAAW,CAAC,EAAE;IAAE,MAAM,IAAIM,SAAS,CAAC,mCAAmC,CAAC;EAAE;AAAE;AAExJ,IAAIC,KAAK,GAAGC,OAAO,CAAC,SAAS,CAAC;AAC9B,IAAIC,IAAI,GAAGD,OAAO,CAAC,QAAQ,CAAC;AAC5B,IAAIE,KAAK,GAAGF,OAAO,CAAC,QAAQ,CAAC,CAACG,cAAc,CAAC,WAAW,CAAC;AACzD,IAAIC,MAAM,GAAGJ,OAAO,CAAC,QAAQ,CAAC;AAC9B,IAAIK,UAAU,GAAGL,OAAO,CAAC,MAAM,CAAC;AAChC,IAAIM,SAAS,GAAGN,OAAO,CAAC,cAAc,CAAC;AACvC,IAAIO,UAAU,GAAGP,OAAO,CAAC,eAAe,CAAC;AAEzC,IAAIQ,SAAS,GAAG,YAAY;EACxB,SAASA,SAASA,CAACC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAE;IAC3Bf,eAAe,CAAC,IAAI,EAAEY,SAAS,CAAC;IAEhC,IAAI,CAACI,CAAC,GAAGH,EAAE;IACX,IAAI,CAACI,CAAC,GAAGH,EAAE;IACX,IAAI,CAAC3B,CAAC,GAAG4B,EAAE;IACXP,MAAM,CAACU,KAAK,CAAC,IAAI,CAACF,CAAC,IAAI,IAAI,EAAE,IAAI,EAAE,mBAAmB,CAAC;IACvDR,MAAM,CAACU,KAAK,CAAC,IAAI,CAACD,CAAC,IAAI,IAAI,EAAE,IAAI,EAAE,mBAAmB,CAAC;IACvDT,MAAM,CAACU,KAAK,CAAC,IAAI,CAAC/B,CAAC,IAAI,IAAI,EAAE,IAAI,EAAE,mBAAmB,CAAC;EAC3D;EAEAJ,YAAY,CAAC6B,SAAS,EAAE,CAAC;IACrBjB,GAAG,EAAE,UAAU;IACfwB,KAAK,EAAE,SAASC,QAAQA,CAAA,EAAG;MACvB,IAAIC,GAAG;MACPA,GAAG,GAAG,IAAIC,MAAM,CAAC,EAAE,CAAC;MACpBD,GAAG,CAACE,UAAU,CAAC,IAAI,CAACpC,CAAC,EAAE,CAAC,CAAC;MACzB,IAAI,CAAC6B,CAAC,CAACI,QAAQ,CAAC,EAAE,CAAC,CAACI,IAAI,CAACH,GAAG,EAAE,CAAC,CAAC;MAChC,IAAI,CAACJ,CAAC,CAACG,QAAQ,CAAC,EAAE,CAAC,CAACI,IAAI,CAACH,GAAG,EAAE,EAAE,CAAC;MACjC,OAAOA,GAAG;IACd;EACJ,CAAC,EAAE;IACC1B,GAAG,EAAE,4BAA4B;IACjCwB,KAAK,EAAE,SAASM,0BAA0BA,CAACC,MAAM,EAAE;MAC/C,OAAO,IAAI,CAACC,gBAAgB,CAACtB,IAAI,CAACuB,MAAM,CAACF,MAAM,CAAC,CAAC;IACrD;EACJ,CAAC,EAAE;IACC/B,GAAG,EAAE,kBAAkB;IAGvB;AACR;AACA;IACQwB,KAAK,EAAE,SAASQ,gBAAgBA,CAACE,aAAa,EAAE;MAC5C,IAAIC,CAAC,GAAG,KAAK,CAAC;QACVC,CAAC,GAAG,KAAK,CAAC;QACV5C,CAAC,GAAG,KAAK,CAAC;MACd4C,CAAC,GAAGtB,UAAU,CAACuB,UAAU,CAACH,aAAa,CAAC;MACxC1C,CAAC,GAAG,IAAI,CAACA,CAAC;MACVA,CAAC,IAAI,EAAE;MACPA,CAAC,GAAGA,CAAC,GAAG,CAAC;MACT2C,CAAC,GAAG3B,KAAK,CAAC8B,aAAa,CAAC3B,KAAK,EAAEyB,CAAC,EAAE,IAAI,EAAE5C,CAAC,CAAC;MAC1C,OAAOuB,SAAS,CAACwB,SAAS,CAACJ,CAAC,CAAC;IACjC;EACJ,CAAC,EAAE;IACCnC,GAAG,EAAE,cAAc;IAGnB;AACR;AACA;AACA;AACA;IACQwB,KAAK,EAAE,SAASgB,YAAYA,CAACd,GAAG,EAAEe,UAAU,EAAE;MAC1C,IAAIC,KAAK,GAAGhC,IAAI,CAACuB,MAAM,CAACP,GAAG,CAAC;MAC5B,OAAO,IAAI,CAACiB,UAAU,CAACD,KAAK,EAAED,UAAU,CAAC;IAC7C;EACJ,CAAC,EAAE;IACCzC,GAAG,EAAE,YAAY;IACjBwB,KAAK,EAAE,SAASmB,UAAUA,CAACjC,IAAI,EAAE+B,UAAU,EAAE;MACzC5B,MAAM,CAACU,KAAK,CAACb,IAAI,CAACjB,MAAM,EAAE,EAAE,EAAE,iDAAiD,GAAGiB,IAAI,CAACjB,MAAM,CAAC;MAC9F,OAAOe,KAAK,CAACoC,MAAM,CAACjC,KAAK,EAAED,IAAI,EAAE;QAC7BW,CAAC,EAAE,IAAI,CAACA,CAAC;QACTC,CAAC,EAAE,IAAI,CAACA;MACZ,CAAC,EAAEmB,UAAU,CAACN,CAAC,CAAC;IACpB;EACJ,CAAC,EAAE;IACCnC,GAAG,EAAE,OAAO;IACZwB,KAAK,EAAE,SAASqB,KAAKA,CAAA,EAAG;MACpB,OAAO,IAAI,CAACpB,QAAQ,CAAC,CAAC,CAACqB,QAAQ,CAAC,KAAK,CAAC;IAC1C;EACJ,CAAC,EAAE;IACC9C,GAAG,EAAE,WAAW;IAChBwB,KAAK,EAAE,SAASuB,SAASA,CAACC,GAAG,EAAEP,UAAU,EAAE;MACvC,IAAIf,GAAG;MACPA,GAAG,GAAG,IAAIC,MAAM,CAACqB,GAAG,EAAE,KAAK,CAAC;MAC5B,OAAO,IAAI,CAACR,YAAY,CAACd,GAAG,EAAEe,UAAU,CAAC;IAC7C;EACJ,CAAC,CAAC,EAAE,CAAC;IACDzC,GAAG,EAAE,YAAY;IACjBwB,KAAK,EAAE,SAASa,UAAUA,CAACX,GAAG,EAAE;MAC5B,IAAIlC,CAAC,EAAE6B,CAAC,EAAEC,CAAC;MACXT,MAAM,CAACU,KAAK,CAACG,GAAG,CAACjC,MAAM,EAAE,EAAE,EAAE,0BAA0B,CAAC;MACxDD,CAAC,GAAGkC,GAAG,CAACuB,SAAS,CAAC,CAAC,CAAC;MACpBpC,MAAM,CAACU,KAAK,CAAC/B,CAAC,GAAG,EAAE,EAAEA,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,6BAA6B,CAAC;MAC/D6B,CAAC,GAAGP,UAAU,CAACuB,UAAU,CAACX,GAAG,CAACwB,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;MAC3C5B,CAAC,GAAGR,UAAU,CAACuB,UAAU,CAACX,GAAG,CAACwB,KAAK,CAAC,EAAE,CAAC,CAAC;MACxC,OAAO,IAAIjC,SAAS,CAACI,CAAC,EAAEC,CAAC,EAAE9B,CAAC,CAAC;IACjC;EACJ,CAAC,EAAE;IACCQ,GAAG,EAAE,YAAY;IAGjB;AACR;AACA;AACA;AACA;IACQwB,KAAK,EAAE,SAAS2B,UAAUA,CAACzB,GAAG,EAAE0B,WAAW,EAAE;MACzC,IAAIV,KAAK,GAAGhC,IAAI,CAACuB,MAAM,CAACP,GAAG,CAAC;MAC5B,OAAOT,SAAS,CAACoC,gBAAgB,CAACX,KAAK,EAAEU,WAAW,CAAC;IACzD;;IAEA;AACR;AACA;AACA;AACA;EAEI,CAAC,EAAE;IACCpD,GAAG,EAAE,kBAAkB;IACvBwB,KAAK,EAAE,SAAS6B,gBAAgBA,CAACC,UAAU,EAAEF,WAAW,EAAE;MACtD,IAAIE,UAAU,CAAC7D,MAAM,KAAK,EAAE,IAAI,CAACkC,MAAM,CAAC4B,QAAQ,CAACD,UAAU,CAAC,EAAE,MAAM,IAAIE,KAAK,CAAC,oCAAoC,CAAC;MACnHJ,WAAW,GAAGK,YAAY,CAACL,WAAW,CAAC;MACvCvC,MAAM,CAACuC,WAAW,EAAE,sBAAsB,CAAC;MAE3C,IAAIM,GAAG,EAAEtB,CAAC,EAAEuB,WAAW,EAAEnE,CAAC,EAAEoE,IAAI,EAAEC,IAAI,EAAEC,KAAK;MAC7CtE,CAAC,GAAG,IAAI;MACRsE,KAAK,GAAG,CAAC;MACT1B,CAAC,GAAGtB,UAAU,CAACuB,UAAU,CAACiB,UAAU,CAAC;MACrC,OAAO,IAAI,EAAE;QACTK,WAAW,GAAGnD,KAAK,CAACuD,IAAI,CAACpD,KAAK,EAAE2C,UAAU,EAAEF,WAAW,CAACY,CAAC,EAAEF,KAAK,EAAE,CAAC;QACnEJ,GAAG,GAAGC,WAAW,CAACM,KAAK,CAAC,CAAC;QACzBL,IAAI,GAAGF,GAAG,CAAC,CAAC,CAAC;QACbG,IAAI,GAAGH,GAAG,CAAC,CAAC,GAAGE,IAAI,CAAC;QACpB,IAAIA,IAAI,KAAK,EAAE,IAAIC,IAAI,KAAK,EAAE,EAAE;UAC5BrE,CAAC,GAAGgB,KAAK,CAAC0D,uBAAuB,CAACvD,KAAK,EAAEyB,CAAC,EAAEuB,WAAW,EAAEP,WAAW,CAACe,WAAW,CAAC,CAAC,CAAChC,CAAC,CAAC;UACrF3C,CAAC,IAAI,CAAC,CAAC,CAAC;UACRA,CAAC,IAAI,EAAE,CAAC,CAAC;UACT;QACJ;QACA,IAAIsE,KAAK,GAAG,EAAE,KAAK,CAAC,EAAE;UAClBM,OAAO,CAACC,GAAG,CAAC,QAAQ,GAAGP,KAAK,GAAG,uCAAuC,CAAC;QAC3E;MACJ;MACA,OAAO,IAAI7C,SAAS,CAAC0C,WAAW,CAACtC,CAAC,EAAEsC,WAAW,CAACrC,CAAC,EAAE9B,CAAC,CAAC;IACzD;EACJ,CAAC,EAAE;IACCQ,GAAG,EAAE,MAAM;IACXwB,KAAK,EAAE,SAASuC,IAAIA,CAACO,MAAM,EAAElB,WAAW,EAAE;MACtC,OAAOnC,SAAS,CAACkC,UAAU,CAAC,IAAIxB,MAAM,CAAC2C,MAAM,CAAC,EAAElB,WAAW,CAAC;IAChE;EACJ,CAAC,EAAE;IACCpD,GAAG,EAAE,SAAS;IAGd;IACA;IACA;IACA;IACA;IACA;;IAEAwB,KAAK,EAAE,SAAS+C,OAAOA,CAACvB,GAAG,EAAE;MACzB,OAAO/B,SAAS,CAACoB,UAAU,CAAC,IAAIV,MAAM,CAACqB,GAAG,EAAE,KAAK,CAAC,CAAC;IACvD;EACJ,CAAC,EAAE;IACChD,GAAG,EAAE,SAAS;IACdwB,KAAK,EAAE,SAASgD,OAAOA,CAACxB,GAAG,EAAEI,WAAW,EAAE;MACtC,IAAI1B,GAAG;MACPA,GAAG,GAAG,IAAIC,MAAM,CAACqB,GAAG,EAAE,KAAK,CAAC;MAC5B,OAAO/B,SAAS,CAACkC,UAAU,CAACzB,GAAG,EAAE0B,WAAW,CAAC;IACjD;EACJ,CAAC,CAAC,CAAC;EAEH,OAAOnC,SAAS;AACpB,CAAC,CAAC,CAAC;AAEH,IAAIwC,YAAY,GAAG,SAASA,YAAYA,CAACgB,CAAC,EAAE;EACxC,OAAOA,CAAC,GAAGA,CAAC,CAACT,CAAC,GAAGS,CAAC,GAAGzD,UAAU,CAAC0D,OAAO,CAACD,CAAC,CAAC,GAAGA,CAAC,CAAC;AACnD,CAAC;AACDE,MAAM,CAACC,OAAO,GAAG3D,SAAS","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}