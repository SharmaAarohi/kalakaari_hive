{"ast":null,"code":"'use strict';\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\nvar _ecc = require('../../ecc');\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nvar FastParser = function () {\n  function FastParser() {\n    _classCallCheck(this, FastParser);\n  }\n  _createClass(FastParser, null, [{\n    key: 'fixed_data',\n    value: function fixed_data(b, len, buffer) {\n      if (!b) {\n        return;\n      }\n      if (buffer) {\n        var data = buffer.slice(0, len).toString('binary');\n        b.append(data, 'binary');\n        while (len-- > data.length) {\n          b.writeUint8(0);\n        }\n      } else {\n        var b_copy = b.copy(b.offset, b.offset + len);\n        b.skip(len);\n        return new Buffer(b_copy.toBinary(), 'binary');\n      }\n    }\n  }, {\n    key: 'public_key',\n    value: function public_key(b, _public_key) {\n      if (!b) {\n        return;\n      }\n      if (_public_key) {\n        var buffer = _public_key.toBuffer();\n        b.append(buffer.toString('binary'), 'binary');\n        return;\n      } else {\n        buffer = FastParser.fixed_data(b, 33);\n        return _ecc.PublicKey.fromBuffer(buffer);\n      }\n    }\n  }, {\n    key: 'ripemd160',\n    value: function ripemd160(b, _ripemd) {\n      if (!b) {\n        return;\n      }\n      if (_ripemd) {\n        FastParser.fixed_data(b, 20, _ripemd);\n        return;\n      } else {\n        return FastParser.fixed_data(b, 20);\n      }\n    }\n  }, {\n    key: 'time_point_sec',\n    value: function time_point_sec(b, epoch) {\n      if (epoch) {\n        epoch = Math.ceil(epoch / 1000);\n        b.writeInt32(epoch);\n        return;\n      } else {\n        epoch = b.readInt32(); // fc::time_point_sec\n        return new Date(epoch * 1000);\n      }\n    }\n  }]);\n  return FastParser;\n}();\nmodule.exports = FastParser;","map":{"version":3,"names":["_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","Constructor","protoProps","staticProps","prototype","_ecc","require","_classCallCheck","instance","TypeError","FastParser","value","fixed_data","b","len","buffer","data","slice","toString","append","writeUint8","b_copy","copy","offset","skip","Buffer","toBinary","public_key","_public_key","toBuffer","PublicKey","fromBuffer","ripemd160","_ripemd","time_point_sec","epoch","Math","ceil","writeInt32","readInt32","Date","module","exports"],"sources":["C:/Users/sunil/kalakaari/node_modules/@hiveio/hive-js/lib/auth/serializer/src/fast_parser.js"],"sourcesContent":["'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _ecc = require('../../ecc');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar FastParser = function () {\n    function FastParser() {\n        _classCallCheck(this, FastParser);\n    }\n\n    _createClass(FastParser, null, [{\n        key: 'fixed_data',\n        value: function fixed_data(b, len, buffer) {\n            if (!b) {\n                return;\n            }\n            if (buffer) {\n                var data = buffer.slice(0, len).toString('binary');\n                b.append(data, 'binary');\n                while (len-- > data.length) {\n                    b.writeUint8(0);\n                }\n            } else {\n                var b_copy = b.copy(b.offset, b.offset + len);\n                b.skip(len);\n                return new Buffer(b_copy.toBinary(), 'binary');\n            }\n        }\n    }, {\n        key: 'public_key',\n        value: function public_key(b, _public_key) {\n            if (!b) {\n                return;\n            }\n            if (_public_key) {\n                var buffer = _public_key.toBuffer();\n                b.append(buffer.toString('binary'), 'binary');\n                return;\n            } else {\n                buffer = FastParser.fixed_data(b, 33);\n                return _ecc.PublicKey.fromBuffer(buffer);\n            }\n        }\n    }, {\n        key: 'ripemd160',\n        value: function ripemd160(b, _ripemd) {\n            if (!b) {\n                return;\n            }\n            if (_ripemd) {\n                FastParser.fixed_data(b, 20, _ripemd);\n                return;\n            } else {\n                return FastParser.fixed_data(b, 20);\n            }\n        }\n    }, {\n        key: 'time_point_sec',\n        value: function time_point_sec(b, epoch) {\n            if (epoch) {\n                epoch = Math.ceil(epoch / 1000);\n                b.writeInt32(epoch);\n                return;\n            } else {\n                epoch = b.readInt32(); // fc::time_point_sec\n                return new Date(epoch * 1000);\n            }\n        }\n    }]);\n\n    return FastParser;\n}();\n\nmodule.exports = FastParser;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}