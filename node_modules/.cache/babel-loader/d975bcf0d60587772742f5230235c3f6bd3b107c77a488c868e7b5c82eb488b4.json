{"ast":null,"code":"'use strict';\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nvar assert = require('assert');\nvar config = require('../../../config');\nvar hash = require('./hash');\nvar base58 = require('bs58');\n\n/** Addresses are shortened non-reversable hashes of a public key.  The full PublicKey is preferred.\n    @deprecated\n*/\n\nvar Address = function () {\n  function Address(addy) {\n    _classCallCheck(this, Address);\n    this.addy = addy;\n  }\n  _createClass(Address, [{\n    key: 'toBuffer',\n    value: function toBuffer() {\n      return this.addy;\n    }\n  }, {\n    key: 'toString',\n    value: function toString() {\n      var address_prefix = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : config.get('address_prefix');\n      var checksum = hash.ripemd160(this.addy);\n      var addy = Buffer.concat([this.addy, checksum.slice(0, 4)]);\n      return address_prefix + base58.encode(addy);\n    }\n  }], [{\n    key: 'fromBuffer',\n    value: function fromBuffer(buffer) {\n      var _hash = hash.sha512(buffer);\n      var addy = hash.ripemd160(_hash);\n      return new Address(addy);\n    }\n  }, {\n    key: 'fromString',\n    value: function fromString(string) {\n      var address_prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : config.get('address_prefix');\n      var prefix = string.slice(0, address_prefix.length);\n      assert.equal(address_prefix, prefix, 'Expecting key to begin with ' + address_prefix + ', instead got ' + prefix);\n      var addy = string.slice(address_prefix.length);\n      addy = new Buffer(base58.decode(addy), 'binary');\n      var checksum = addy.slice(-4);\n      addy = addy.slice(0, -4);\n      var new_checksum = hash.ripemd160(addy);\n      new_checksum = new_checksum.slice(0, 4);\n      assert.deepEqual(checksum, new_checksum, 'Checksum did not match');\n      return new Address(addy);\n    }\n\n    /** @return Address - Compressed PTS format (by default) */\n  }, {\n    key: 'fromPublic',\n    value: function fromPublic(public_key) {\n      var compressed = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var version = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 56;\n      var sha2 = hash.sha256(public_key.toBuffer(compressed));\n      var rep = hash.ripemd160(sha2);\n      var versionBuffer = new Buffer(1);\n      versionBuffer.writeUInt8(0xFF & version, 0);\n      var addr = Buffer.concat([versionBuffer, rep]);\n      var check = hash.sha256(addr);\n      check = hash.sha256(check);\n      var buffer = Buffer.concat([addr, check.slice(0, 4)]);\n      return new Address(hash.ripemd160(buffer));\n    }\n  }]);\n  return Address;\n}();\nmodule.exports = Address;","map":{"version":3,"names":["_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","Constructor","protoProps","staticProps","prototype","_classCallCheck","instance","TypeError","assert","require","config","hash","base58","Address","addy","value","toBuffer","toString","address_prefix","arguments","undefined","get","checksum","ripemd160","Buffer","concat","slice","encode","fromBuffer","buffer","_hash","sha512","fromString","string","prefix","equal","decode","new_checksum","deepEqual","fromPublic","public_key","compressed","version","sha2","sha256","rep","versionBuffer","writeUInt8","addr","check","module","exports"],"sources":["C:/Users/sunil/kalakaari/node_modules/@hiveio/hive-js/lib/auth/ecc/src/address.js"],"sourcesContent":["'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar assert = require('assert');\nvar config = require('../../../config');\nvar hash = require('./hash');\nvar base58 = require('bs58');\n\n/** Addresses are shortened non-reversable hashes of a public key.  The full PublicKey is preferred.\n    @deprecated\n*/\n\nvar Address = function () {\n    function Address(addy) {\n        _classCallCheck(this, Address);\n\n        this.addy = addy;\n    }\n\n    _createClass(Address, [{\n        key: 'toBuffer',\n        value: function toBuffer() {\n            return this.addy;\n        }\n    }, {\n        key: 'toString',\n        value: function toString() {\n            var address_prefix = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : config.get('address_prefix');\n\n            var checksum = hash.ripemd160(this.addy);\n            var addy = Buffer.concat([this.addy, checksum.slice(0, 4)]);\n            return address_prefix + base58.encode(addy);\n        }\n    }], [{\n        key: 'fromBuffer',\n        value: function fromBuffer(buffer) {\n            var _hash = hash.sha512(buffer);\n            var addy = hash.ripemd160(_hash);\n            return new Address(addy);\n        }\n    }, {\n        key: 'fromString',\n        value: function fromString(string) {\n            var address_prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : config.get('address_prefix');\n\n            var prefix = string.slice(0, address_prefix.length);\n            assert.equal(address_prefix, prefix, 'Expecting key to begin with ' + address_prefix + ', instead got ' + prefix);\n            var addy = string.slice(address_prefix.length);\n            addy = new Buffer(base58.decode(addy), 'binary');\n            var checksum = addy.slice(-4);\n            addy = addy.slice(0, -4);\n            var new_checksum = hash.ripemd160(addy);\n            new_checksum = new_checksum.slice(0, 4);\n            assert.deepEqual(checksum, new_checksum, 'Checksum did not match');\n            return new Address(addy);\n        }\n\n        /** @return Address - Compressed PTS format (by default) */\n\n    }, {\n        key: 'fromPublic',\n        value: function fromPublic(public_key) {\n            var compressed = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n            var version = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 56;\n\n            var sha2 = hash.sha256(public_key.toBuffer(compressed));\n            var rep = hash.ripemd160(sha2);\n            var versionBuffer = new Buffer(1);\n            versionBuffer.writeUInt8(0xFF & version, 0);\n            var addr = Buffer.concat([versionBuffer, rep]);\n            var check = hash.sha256(addr);\n            check = hash.sha256(check);\n            var buffer = Buffer.concat([addr, check.slice(0, 4)]);\n            return new Address(hash.ripemd160(buffer));\n        }\n    }]);\n\n    return Address;\n}();\n\nmodule.exports = Address;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}