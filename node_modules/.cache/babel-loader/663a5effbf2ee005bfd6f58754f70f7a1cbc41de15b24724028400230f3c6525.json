{"ast":null,"code":"'use strict';\n\nvar _slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n    return _arr;\n  }\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\nvar _ecc = require('../../ecc');\nvar _number_utils = require('./number_utils');\nvar _config = require('../../../config.js');\nvar _config2 = _interopRequireDefault(_config);\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\n// Low-level types that make up operations\n\nvar v = require('./validation');\nvar ObjectId = require('./object_id');\nvar fp = require('./fast_parser');\nvar chain_types = require('./ChainTypes');\n//const BigInt = require('BigInt')\n\nvar Types = {};\nmodule.exports = Types;\nvar HEX_DUMP = process.env.npm_config__graphene_serializer_hex_dump;\n\n// Highly optimized implementation of Damm algorithm\n// https://en.wikipedia.org/wiki/Damm_algorithm\nfunction damm_checksum_8digit(value) {\n  if (value >= 100000000) throw new Error(\"Expected value less than 100000000, instead got \" + value);\n  var t = [0, 30, 10, 70, 50, 90, 80, 60, 40, 20, 70, 0, 90, 20, 10, 50, 40, 80, 60, 30, 40, 20, 0, 60, 80, 70, 10, 30, 50, 90, 10, 70, 50, 0, 90, 80, 30, 40, 20, 60, 60, 10, 20, 30, 0, 40, 50, 90, 70, 80, 30, 60, 70, 40, 20, 0, 90, 50, 80, 10, 50, 80, 60, 90, 70, 20, 0, 10, 30, 40, 80, 90, 40, 50, 30, 60, 20, 0, 10, 70, 90, 40, 30, 80, 60, 10, 70, 20, 0, 50, 20, 50, 80, 10, 40, 30, 60, 70, 90, 0];\n  var q0 = value / 10;\n  var d0 = value % 10;\n  var q1 = q0 / 10;\n  var d1 = q0 % 10;\n  var q2 = q1 / 10;\n  var d2 = q1 % 10;\n  var q3 = q2 / 10;\n  var d3 = q2 % 10;\n  var q4 = q3 / 10;\n  var d4 = q3 % 10;\n  var q5 = q4 / 10;\n  var d5 = q4 % 10;\n  var d6 = q5 % 10;\n  var d7 = q5 / 10;\n  var x = t[d7];\n  x = t[x + d6];\n  x = t[x + d5];\n  x = t[x + d4];\n  x = t[x + d3];\n  x = t[x + d2];\n  x = t[x + d1];\n  x = t[x + d0];\n  return x / 10;\n}\n\n/**\n* Asset symbols contain the following information\n*\n*  4 bit PRECISION\n*  4 bit RESERVED\n*  CHAR[6] up to 6 upper case alpha numeric ascii characters,\n*  char = \\0  null terminated\n*\n*  It is treated as a uint64_t for all internal operations, but\n*  is easily converted to something that can be displayed.\n*\n*  Legacy serialization of assets\n*  0000pppp aaaaaaaa bbbbbbbb cccccccc dddddddd eeeeeeee ffffffff 00000000\n*  Symbol = abcdef\n*\n*  NAI serialization of assets\n*  aaa1pppp bbbbbbbb cccccccc dddddddd\n*  NAI = (MSB to LSB) dddddddd cccccccc bbbbbbbb aaa\n*\n*  NAI internal storage of legacy assets\n*/\nTypes.asset = {\n  fromByteBuffer: function fromByteBuffer(b) {\n    var amount = b.readInt64();\n    var precision = b.readUint8();\n    var amount_string = \"\";\n    var symbol = \"\";\n    if (precision >= 16) {\n      // NAI Case\n      var b_copy = b.copy(b.offset - 1, b.offset + 3);\n      var nai = new Buffer(b_copy.toBinary(), \"binary\").readInt32();\n      nai = nai / 32;\n      symbol = \"@@\" + nai.toString().padStart(8, '0') + damm_checksum_8digit(nai).to_String();\n      precision = precision % 16;\n      b.skip(3);\n      amount_string = (0, _number_utils.fromImpliedDecimal)(amount, precision);\n    } else {\n      // Legacy Case\n      var _b_copy = b.copy(b.offset, b.offset + 7);\n      symbol = new Buffer(_b_copy.toBinary(), \"binary\").toString().replace(/\\x00/g, \"\");\n      b.skip(7);\n      // \"1.000 HIVE\" always written with full precision\n      amount_string = (0, _number_utils.fromImpliedDecimal)(amount, precision);\n    }\n    return amount_string + \" \" + symbol;\n  },\n  appendByteBuffer: function appendByteBuffer(b, object) {\n    var amount = \"\";\n    var symbol = \"\";\n    var nai = 0;\n    var precision = 0;\n    if (object[\"nai\"]) {\n      symbol = object[\"nai\"];\n      nai = parseInt(symbol.slice(2));\n      var checksum = nai % 10;\n      nai = Math.floor(nai / 10);\n      var expected_checksum = damm_checksum_8digit(nai);\n      switch (object[\"nai\"]) {\n        case \"@@000000021\":\n          precision = 3;\n          symbol = _config2.default.get(\"address_prefix\") == \"STM\" ? \"STEEM\" : \"TESTS\";\n          break;\n        case \"@@000000013\":\n          precision = 3;\n          symbol = _config2.default.get(\"address_prefix\") == \"STM\" ? \"SBD\" : \"TBD\";\n          break;\n        case \"@@000000037\":\n          precision = 6;\n          symbol = \"VESTS\";\n          break;\n      }\n      precision = parseInt(object[\"precision\"]);\n      b.writeInt64(v.to_long(parseInt(object[\"amount\"])));\n    } else {\n      object = object.trim();\n      if (!/^[0-9]+\\.?[0-9]* [A-Za-z0-9@]+$/.test(object)) throw new Error(\"Expecting amount like '99.000 SYMBOL', instead got '\" + object + \"'\");\n      var res = object.split(\" \");\n      amount = res[0];\n      symbol = res[1];\n\n      // Hive workaround for now\n      symbol = symbol == \"HIVE\" ? \"STEEM\" : symbol == \"HBD\" ? \"SBD\" : symbol;\n      if (symbol.startsWith(\"@@\")) {\n        // NAI Case\n        nai = parseInt(symbol.slice(2));\n        var _checksum = nai % 10;\n        nai = Math.floor(nai / 10);\n        var _expected_checksum = damm_checksum_8digit(nai);\n      } else if (symbol.length > 6) throw new Error(\"Symbols are not longer than 6 characters \" + symbol + \"-\" + symbol.length);\n      b.writeInt64(v.to_long(amount.replace(\".\", \"\")));\n      var dot = amount.indexOf(\".\"); // 0.000\n      precision = dot === -1 ? 0 : amount.length - dot - 1;\n    }\n    if (symbol.startsWith(\"@@\")) {\n      nai = (nai << 5) + 16 + precision;\n      b.writeUint32(nai);\n    } else {\n      b.writeUint8(precision);\n      b.append(symbol.toUpperCase(), 'binary');\n      for (var i = 0; i < 7 - symbol.length; i++) {\n        b.writeUint8(0);\n      }\n    }\n    return;\n  },\n  fromObject: function fromObject(object) {\n    return object;\n  },\n  toObject: function toObject(object) {\n    var debug = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (debug.use_default && object === undefined) {\n      return \"0.000 HIVE\";\n    }\n    return object;\n  }\n};\nTypes.asset_symbol = {\n  fromByteBuffer: function fromByteBuffer(b) {\n    var precision = b.readUint8();\n    var amount_string = \"\";\n    var nai_string = \"\";\n    if (precision >= 16) {\n      // NAI Case\n      var b_copy = b.copy(b.offset - 1, b.offset + 3);\n      var nai = new Buffer(b_copy.toBinary(), \"binary\").readInt32();\n      nai = nai / 32;\n      nai_string = \"@@\" + nai.toString().padStart(8, '0') + damm_checksum_8digit(nai).to_String();\n      precision = precision % 16;\n      b.skip(3);\n    } else {\n      // Legacy Case\n      var _b_copy2 = b.copy(b.offset, b.offset + 7);\n      var symbol = new Buffer(_b_copy2.toBinary(), \"binary\").toString().replace(/\\x00/g, \"\");\n      if (symbol == \"STEEM\" || symbol == \"TESTS\") nai_string = \"@@000000021\";else if (symbol == \"SBD\" || symbol == \"TBD\") nai_string = \"@@000000013\";else if (symbol == \"VESTS\") nai_string = \"@@000000037\";else throw new Error(\"Expecting non-smt core asset symbol, instead got '\" + symbol + \"'\");\n      b.skip(7);\n    }\n    return {\n      \"nai\": nai_string,\n      \"precision\": precision\n    };\n  },\n  appendByteBuffer: function appendByteBuffer(b, object) {\n    var nai = 0;\n    if (!object[\"nai\"].startsWith(\"@@\")) throw new Error(\"Asset Symbols NAIs must be prefixed with '@@'. Was \" + object[\"nai\"]);\n    nai = parseInt(object[\"nai\"].slice(2));\n    var checksum = nai % 10;\n    nai = Math.floor(nai / 10);\n    var expected_checksum = damm_checksum_8digit(nai);\n    var precision = 0;\n    var symbol = \"\";\n    switch (object[\"nai\"]) {\n      case \"@@000000021\":\n        precision = 3;\n        symbol = _config2.default.get(\"address_prefix\") == \"STM\" ? \"STEEM\" : \"TESTS\";\n        break;\n      case \"@@000000013\":\n        precision = 3;\n        symbol = _config2.default.get(\"address_prefix\") == \"STM\" ? \"SBD\" : \"TBD\";\n        break;\n      case \"@@000000037\":\n        precision = 6;\n        symbol = \"VESTS\";\n        break;\n    }\n    if (precision > 0) {\n      //Core Symbol Case\n      b.writeUint8(precision);\n      b.append(symbol, 'binary');\n      for (var i = 0; i < 7 - symbol.length; i++) {\n        b.writeUint8(0);\n      }\n    } else {\n      nai = (nai << 5) + 16 + object[\"precision\"];\n      b.writeUint32(nai);\n    }\n    return;\n  },\n  fromObject: function fromObject(object) {\n    return object;\n  },\n  toObject: function toObject(object) {\n    var debug = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (debug.use_default && object === undefined) {\n      return \"STEEM\";\n    }\n    return object;\n  }\n};\nTypes.uint8 = {\n  fromByteBuffer: function fromByteBuffer(b) {\n    return b.readUint8();\n  },\n  appendByteBuffer: function appendByteBuffer(b, object) {\n    v.require_range(0, 0xFF, object, 'uint8 ' + object);\n    b.writeUint8(object);\n    return;\n  },\n  fromObject: function fromObject(object) {\n    v.require_range(0, 0xFF, object, 'uint8 ' + object);\n    return object;\n  },\n  toObject: function toObject(object) {\n    var debug = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (debug.use_default && object === undefined) {\n      return 0;\n    }\n    v.require_range(0, 0xFF, object, 'uint8 ' + object);\n    return parseInt(object);\n  }\n};\nTypes.uint16 = {\n  fromByteBuffer: function fromByteBuffer(b) {\n    return b.readUint16();\n  },\n  appendByteBuffer: function appendByteBuffer(b, object) {\n    v.require_range(0, 0xFFFF, object, 'uint16 ' + object);\n    b.writeUint16(object);\n    return;\n  },\n  fromObject: function fromObject(object) {\n    v.require_range(0, 0xFFFF, object, 'uint16 ' + object);\n    return object;\n  },\n  toObject: function toObject(object) {\n    var debug = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (debug.use_default && object === undefined) {\n      return 0;\n    }\n    v.require_range(0, 0xFFFF, object, 'uint16 ' + object);\n    return parseInt(object);\n  }\n};\nTypes.uint32 = {\n  fromByteBuffer: function fromByteBuffer(b) {\n    return b.readUint32();\n  },\n  appendByteBuffer: function appendByteBuffer(b, object) {\n    v.require_range(0, 0xFFFFFFFF, object, 'uint32 ' + object);\n    b.writeUint32(object);\n    return;\n  },\n  fromObject: function fromObject(object) {\n    v.require_range(0, 0xFFFFFFFF, object, 'uint32 ' + object);\n    return object;\n  },\n  toObject: function toObject(object) {\n    var debug = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (debug.use_default && object === undefined) {\n      return 0;\n    }\n    v.require_range(0, 0xFFFFFFFF, object, 'uint32 ' + object);\n    return parseInt(object);\n  }\n};\nvar MIN_SIGNED_32 = -1 * Math.pow(2, 31);\nvar MAX_SIGNED_32 = Math.pow(2, 31) - 1;\nTypes.varint32 = {\n  fromByteBuffer: function fromByteBuffer(b) {\n    return b.readVarint32();\n  },\n  appendByteBuffer: function appendByteBuffer(b, object) {\n    v.require_range(MIN_SIGNED_32, MAX_SIGNED_32, object, 'uint32 ' + object);\n    b.writeVarint32(object);\n    return;\n  },\n  fromObject: function fromObject(object) {\n    v.require_range(MIN_SIGNED_32, MAX_SIGNED_32, object, 'uint32 ' + object);\n    return object;\n  },\n  toObject: function toObject(object) {\n    var debug = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (debug.use_default && object === undefined) {\n      return 0;\n    }\n    v.require_range(MIN_SIGNED_32, MAX_SIGNED_32, object, 'uint32 ' + object);\n    return parseInt(object);\n  }\n};\nTypes.int16 = {\n  fromByteBuffer: function fromByteBuffer(b) {\n    return b.readInt16();\n  },\n  appendByteBuffer: function appendByteBuffer(b, object) {\n    b.writeInt16(object);\n    return;\n  },\n  fromObject: function fromObject(object) {\n    return object;\n  },\n  toObject: function toObject(object) {\n    var debug = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (debug.use_default && object === undefined) {\n      return 0;\n    }\n    return parseInt(object);\n  }\n};\nTypes.int64 = {\n  fromByteBuffer: function fromByteBuffer(b) {\n    return b.readInt64();\n  },\n  appendByteBuffer: function appendByteBuffer(b, object) {\n    v.required(object);\n    b.writeInt64(v.to_long(object));\n    return;\n  },\n  fromObject: function fromObject(object) {\n    v.required(object);\n    return v.to_long(object);\n  },\n  toObject: function toObject(object) {\n    var debug = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (debug.use_default && object === undefined) {\n      return \"0\";\n    }\n    v.required(object);\n    return v.to_long(object).toString();\n  }\n};\nTypes.uint64 = {\n  fromByteBuffer: function fromByteBuffer(b) {\n    return b.readUint64();\n  },\n  appendByteBuffer: function appendByteBuffer(b, object) {\n    b.writeUint64(v.to_long(v.unsigned(object)));\n    return;\n  },\n  fromObject: function fromObject(object) {\n    return v.to_long(v.unsigned(object));\n  },\n  toObject: function toObject(object) {\n    var debug = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (debug.use_default && object === undefined) {\n      return \"0\";\n    }\n    return v.to_long(object).toString();\n  }\n};\nTypes.uint128 = {\n  fromByteBuffer: function fromByteBuffer(b) {\n    b.readBigInt64();\n    return b.readBigInt64();\n  },\n  appendByteBuffer: function appendByteBuffer(b, object) {\n    b.writeUint64(v.to_long(v.unsigned(0)));\n    b.writeUint64(v.to_long(v.unsigned(object)));\n    return;\n  },\n  fromObject: function fromObject(object) {\n    return v.to_long(v.unsigned(object));\n  },\n  toObject: function toObject(object) {\n    var debug = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (debug.use_default && object === undefined) {\n      return \"0\";\n    }\n    return v.to_long(object).toString();\n  }\n};\nTypes.string = {\n  fromByteBuffer: function fromByteBuffer(b) {\n    return new Buffer(b.readVString(), 'utf8');\n  },\n  appendByteBuffer: function appendByteBuffer(b, object) {\n    v.required(object);\n    b.writeVString(object.toString());\n    return;\n  },\n  fromObject: function fromObject(object) {\n    v.required(object);\n    return new Buffer(object, 'utf8');\n  },\n  toObject: function toObject(object) {\n    var debug = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (debug.use_default && object === undefined) {\n      return \"\";\n    }\n    return object.toString('utf8');\n  }\n};\nTypes.string_binary = {\n  fromByteBuffer: function fromByteBuffer(b) {\n    var b_copy;\n    var len = b.readVarint32();\n    b_copy = b.copy(b.offset, b.offset + len), b.skip(len);\n    return new Buffer(b_copy.toBinary(), 'binary');\n  },\n  appendByteBuffer: function appendByteBuffer(b, object) {\n    b.writeVarint32(object.length);\n    b.append(object.toString('binary'), 'binary');\n    return;\n  },\n  fromObject: function fromObject(object) {\n    v.required(object);\n    return new Buffer(object);\n  },\n  toObject: function toObject(object) {\n    var debug = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (debug.use_default && object === undefined) {\n      return \"\";\n    }\n    return object.toString();\n  }\n};\nTypes.bytes = function (size) {\n  return {\n    fromByteBuffer: function fromByteBuffer(b) {\n      if (size === undefined) {\n        var b_copy;\n        var len = b.readVarint32();\n        b_copy = b.copy(b.offset, b.offset + len), b.skip(len);\n        return new Buffer(b_copy.toBinary(), 'binary');\n      } else {\n        b_copy = b.copy(b.offset, b.offset + size), b.skip(size);\n        return new Buffer(b_copy.toBinary(), 'binary');\n      }\n    },\n    appendByteBuffer: function appendByteBuffer(b, object) {\n      v.required(object);\n      if (typeof object === \"string\") object = new Buffer(object, \"hex\");\n      if (size === undefined) {\n        b.writeVarint32(object.length);\n      }\n      b.append(object.toString('binary'), 'binary');\n      return;\n    },\n    fromObject: function fromObject(object) {\n      v.required(object);\n      if (Buffer.isBuffer(object)) return object;\n      return new Buffer(object, 'hex');\n    },\n    toObject: function toObject(object) {\n      var debug = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      if (debug.use_default && object === undefined) {\n        var zeros = function zeros(num) {\n          return new Array(num).join(\"00\");\n        };\n        return zeros(size);\n      }\n      v.required(object);\n      return object.toString('hex');\n    }\n  };\n};\nTypes.bool = {\n  fromByteBuffer: function fromByteBuffer(b) {\n    return b.readUint8() === 1;\n  },\n  appendByteBuffer: function appendByteBuffer(b, object) {\n    // supports boolean or integer\n    b.writeUint8(JSON.parse(object) ? 1 : 0);\n    return;\n  },\n  fromObject: function fromObject(object) {\n    return JSON.parse(object) ? true : false;\n  },\n  toObject: function toObject(object) {\n    var debug = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (debug.use_default && object === undefined) {\n      return false;\n    }\n    return JSON.parse(object) ? true : false;\n  }\n};\nTypes.void = {\n  fromByteBuffer: function fromByteBuffer(b) {\n    throw new Error(\"(void) undefined type\");\n  },\n  appendByteBuffer: function appendByteBuffer(b, object) {\n    throw new Error(\"(void) undefined type\");\n  },\n  fromObject: function fromObject(object) {\n    throw new Error(\"(void) undefined type\");\n  },\n  toObject: function toObject(object) {\n    var debug = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (debug.use_default && object === undefined) {\n      return undefined;\n    }\n    throw new Error(\"(void) undefined type\");\n  }\n};\nTypes.array = function (st_operation) {\n  return {\n    fromByteBuffer: function fromByteBuffer(b) {\n      var size = b.readVarint32();\n      if (HEX_DUMP) {\n        console.log(\"varint32 size = \" + size.toString(16));\n      }\n      var result = [];\n      for (var i = 0; 0 < size ? i < size : i > size; 0 < size ? i++ : i++) {\n        result.push(st_operation.fromByteBuffer(b));\n      }\n      return sortOperation(result, st_operation);\n    },\n    appendByteBuffer: function appendByteBuffer(b, object) {\n      v.required(object);\n      object = sortOperation(object, st_operation);\n      b.writeVarint32(object.length);\n      for (var i = 0, o; i < object.length; i++) {\n        o = object[i];\n        st_operation.appendByteBuffer(b, o);\n      }\n    },\n    fromObject: function fromObject(object) {\n      v.required(object);\n      object = sortOperation(object, st_operation);\n      var result = [];\n      for (var i = 0, o; i < object.length; i++) {\n        o = object[i];\n        result.push(st_operation.fromObject(o));\n      }\n      return result;\n    },\n    toObject: function toObject(object) {\n      var debug = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      if (debug.use_default && object === undefined) {\n        return [st_operation.toObject(object, debug)];\n      }\n      v.required(object);\n      object = sortOperation(object, st_operation);\n      var result = [];\n      for (var i = 0, o; i < object.length; i++) {\n        o = object[i];\n        result.push(st_operation.toObject(o, debug));\n      }\n      return result;\n    }\n  };\n};\nTypes.time_point_sec = {\n  fromByteBuffer: function fromByteBuffer(b) {\n    return b.readUint32();\n  },\n  appendByteBuffer: function appendByteBuffer(b, object) {\n    if (typeof object !== \"number\") object = Types.time_point_sec.fromObject(object);\n    b.writeUint32(object);\n    return;\n  },\n  fromObject: function fromObject(object) {\n    v.required(object);\n    if (typeof object === \"number\") return object;\n    if (object.getTime) return Math.floor(object.getTime() / 1000);\n    if (typeof object !== \"string\") throw new Error(\"Unknown date type: \" + object);\n    if (typeof object === \"string\" && !/Z$/.test(object)) object = object + \"Z\";\n    return Math.floor(new Date(object).getTime() / 1000);\n  },\n  toObject: function toObject(object) {\n    var debug = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (debug.use_default && object === undefined) return new Date(0).toISOString().split('.')[0];\n    v.required(object);\n    if (typeof object === \"string\") return object;\n    if (object.getTime) return object.toISOString().split('.')[0];\n    var int = parseInt(object);\n    v.require_range(0, 0xFFFFFFFF, int, 'uint32 ' + object);\n    return new Date(int * 1000).toISOString().split('.')[0];\n  }\n};\nTypes.set = function (st_operation) {\n  return {\n    validate: function validate(array) {\n      var dup_map = {};\n      for (var i = 0, o; i < array.length; i++) {\n        o = array[i];\n        var ref;\n        if (ref = typeof o === 'undefined' ? 'undefined' : _typeof(o), ['string', 'number'].indexOf(ref) >= 0) {\n          if (dup_map[o] !== undefined) {\n            throw new Error(\"duplicate (set)\");\n          }\n          dup_map[o] = true;\n        }\n      }\n      return sortOperation(array, st_operation);\n    },\n    fromByteBuffer: function fromByteBuffer(b) {\n      var size = b.readVarint32();\n      if (HEX_DUMP) {\n        console.log(\"varint32 size = \" + size.toString(16));\n      }\n      return this.validate(function () {\n        var result = [];\n        for (var i = 0; 0 < size ? i < size : i > size; 0 < size ? i++ : i++) {\n          result.push(st_operation.fromByteBuffer(b));\n        }\n        return result;\n      }());\n    },\n    appendByteBuffer: function appendByteBuffer(b, object) {\n      if (!object) {\n        object = [];\n      }\n      b.writeVarint32(object.length);\n      var iterable = this.validate(object);\n      for (var i = 0, o; i < iterable.length; i++) {\n        o = iterable[i];\n        st_operation.appendByteBuffer(b, o);\n      }\n      return;\n    },\n    fromObject: function fromObject(object) {\n      if (!object) {\n        object = [];\n      }\n      return this.validate(function () {\n        var result = [];\n        for (var i = 0, o; i < object.length; i++) {\n          o = object[i];\n          result.push(st_operation.fromObject(o));\n        }\n        return result;\n      }());\n    },\n    toObject: function toObject(object) {\n      var debug = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      if (debug.use_default && object === undefined) {\n        return [st_operation.toObject(object, debug)];\n      }\n      if (!object) {\n        object = [];\n      }\n      return this.validate(function () {\n        var result = [];\n        for (var i = 0, o; i < object.length; i++) {\n          o = object[i];\n          result.push(st_operation.toObject(o, debug));\n        }\n        return result;\n      }());\n    }\n  };\n};\n\n// global_parameters_update_operation current_fees\nTypes.fixed_array = function (count, st_operation) {\n  return {\n    fromByteBuffer: function fromByteBuffer(b) {\n      var i, j, ref, results;\n      results = [];\n      for (i = j = 0, ref = count; j < ref; i = j += 1) {\n        results.push(st_operation.fromByteBuffer(b));\n      }\n      return sortOperation(results, st_operation);\n    },\n    appendByteBuffer: function appendByteBuffer(b, object) {\n      var i, j, ref;\n      if (count !== 0) {\n        v.required(object);\n        object = sortOperation(object, st_operation);\n      }\n      for (i = j = 0, ref = count; j < ref; i = j += 1) {\n        st_operation.appendByteBuffer(b, object[i]);\n      }\n    },\n    fromObject: function fromObject(object) {\n      var i, j, ref, results;\n      if (count !== 0) {\n        v.required(object);\n      }\n      results = [];\n      for (i = j = 0, ref = count; j < ref; i = j += 1) {\n        results.push(st_operation.fromObject(object[i]));\n      }\n      return results;\n    },\n    toObject: function toObject(object, debug) {\n      var i, j, k, ref, ref1, results, results1;\n      if (debug == null) {\n        debug = {};\n      }\n      if (debug.use_default && object === void 0) {\n        results = [];\n        for (i = j = 0, ref = count; j < ref; i = j += 1) {\n          results.push(st_operation.toObject(void 0, debug));\n        }\n        return results;\n      }\n      if (count !== 0) {\n        v.required(object);\n      }\n      results1 = [];\n      for (i = k = 0, ref1 = count; k < ref1; i = k += 1) {\n        results1.push(st_operation.toObject(object[i], debug));\n      }\n      return results1;\n    }\n  };\n};\n\n/* Supports instance numbers (11) or object types (1.2.11).  Object type\nvalidation is enforced when an object type is used. */\nvar id_type = function id_type(reserved_spaces, object_type) {\n  v.required(reserved_spaces, \"reserved_spaces\");\n  v.required(object_type, \"object_type\");\n  return {\n    fromByteBuffer: function fromByteBuffer(b) {\n      return b.readVarint32();\n    },\n    appendByteBuffer: function appendByteBuffer(b, object) {\n      v.required(object);\n      if (object.resolve !== undefined) {\n        object = object.resolve;\n      }\n      // convert 1.2.n into just n\n      if (/^[0-9]+\\.[0-9]+\\.[0-9]+$/.test(object)) {\n        object = v.get_instance(reserved_spaces, object_type, object);\n      }\n      b.writeVarint32(v.to_number(object));\n      return;\n    },\n    fromObject: function fromObject(object) {\n      v.required(object);\n      if (object.resolve !== undefined) {\n        object = object.resolve;\n      }\n      if (v.is_digits(object)) {\n        return v.to_number(object);\n      }\n      return v.get_instance(reserved_spaces, object_type, object);\n    },\n    toObject: function toObject(object) {\n      var debug = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var object_type_id = chain_types.object_type[object_type];\n      if (debug.use_default && object === undefined) {\n        return reserved_spaces + '.' + object_type_id + '.0';\n      }\n      v.required(object);\n      if (object.resolve !== undefined) {\n        object = object.resolve;\n      }\n      if (/^[0-9]+\\.[0-9]+\\.[0-9]+$/.test(object)) {\n        object = v.get_instance(reserved_spaces, object_type, object);\n      }\n      return reserved_spaces + '.' + object_type_id + '.' + object;\n    }\n  };\n};\nTypes.protocol_id_type = function (name) {\n  v.required(name, \"name\");\n  return id_type(chain_types.reserved_spaces.protocol_ids, name);\n};\nTypes.object_id_type = {\n  fromByteBuffer: function fromByteBuffer(b) {\n    return ObjectId.fromByteBuffer(b);\n  },\n  appendByteBuffer: function appendByteBuffer(b, object) {\n    v.required(object);\n    if (object.resolve !== undefined) {\n      object = object.resolve;\n    }\n    object = ObjectId.fromString(object);\n    object.appendByteBuffer(b);\n    return;\n  },\n  fromObject: function fromObject(object) {\n    v.required(object);\n    if (object.resolve !== undefined) {\n      object = object.resolve;\n    }\n    return ObjectId.fromString(object);\n  },\n  toObject: function toObject(object) {\n    var debug = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (debug.use_default && object === undefined) {\n      return \"0.0.0\";\n    }\n    v.required(object);\n    if (object.resolve !== undefined) {\n      object = object.resolve;\n    }\n    object = ObjectId.fromString(object);\n    return object.toString();\n  }\n};\nTypes.vote_id = {\n  TYPE: 0x000000FF,\n  ID: 0xFFFFFF00,\n  fromByteBuffer: function fromByteBuffer(b) {\n    var value = b.readUint32();\n    return {\n      type: value & this.TYPE,\n      id: value & this.ID\n    };\n  },\n  appendByteBuffer: function appendByteBuffer(b, object) {\n    v.required(object);\n    if (object === \"string\") object = Types.vote_id.fromObject(object);\n    var value = object.id << 8 | object.type;\n    b.writeUint32(value);\n    return;\n  },\n  fromObject: function fromObject(object) {\n    v.required(object, \"(type vote_id)\");\n    if ((typeof object === 'undefined' ? 'undefined' : _typeof(object)) === \"object\") {\n      v.required(object.type, \"type\");\n      v.required(object.id, \"id\");\n      return object;\n    }\n    v.require_test(/^[0-9]+:[0-9]+$/, object, 'vote_id format ' + object);\n    var _object$split = object.split(':'),\n      _object$split2 = _slicedToArray(_object$split, 2),\n      type = _object$split2[0],\n      id = _object$split2[1];\n    v.require_range(0, 0xff, type, 'vote type ' + object);\n    v.require_range(0, 0xffffff, id, 'vote id ' + object);\n    return {\n      type: type,\n      id: id\n    };\n  },\n  toObject: function toObject(object) {\n    var debug = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (debug.use_default && object === undefined) {\n      return \"0:0\";\n    }\n    v.required(object);\n    if (typeof object === \"string\") object = Types.vote_id.fromObject(object);\n    return object.type + \":\" + object.id;\n  },\n  compare: function compare(a, b) {\n    if ((typeof a === 'undefined' ? 'undefined' : _typeof(a)) !== \"object\") a = Types.vote_id.fromObject(a);\n    if ((typeof b === 'undefined' ? 'undefined' : _typeof(b)) !== \"object\") b = Types.vote_id.fromObject(b);\n    return parseInt(a.id) - parseInt(b.id);\n  }\n};\nTypes.optional = function (st_operation) {\n  v.required(st_operation, \"st_operation\");\n  return {\n    fromByteBuffer: function fromByteBuffer(b) {\n      if (!(b.readUint8() === 1)) {\n        return undefined;\n      }\n      return st_operation.fromByteBuffer(b);\n    },\n    appendByteBuffer: function appendByteBuffer(b, object) {\n      if (object !== null && object !== undefined) {\n        b.writeUint8(1);\n        st_operation.appendByteBuffer(b, object);\n      } else {\n        b.writeUint8(0);\n      }\n      return;\n    },\n    fromObject: function fromObject(object) {\n      if (object === undefined) {\n        return undefined;\n      }\n      return st_operation.fromObject(object);\n    },\n    toObject: function toObject(object) {\n      var debug = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      // toObject is only null save if use_default is true\n      var result_object = function () {\n        if (!debug.use_default && object === undefined) {\n          return undefined;\n        } else {\n          return st_operation.toObject(object, debug);\n        }\n      }();\n      if (debug.annotate) {\n        if ((typeof result_object === 'undefined' ? 'undefined' : _typeof(result_object)) === \"object\") {\n          result_object.__optional = \"parent is optional\";\n        } else {\n          result_object = {\n            __optional: result_object\n          };\n        }\n      }\n      return result_object;\n    }\n  };\n};\nTypes.static_variant = function (_st_operations) {\n  return {\n    nosort: true,\n    st_operations: _st_operations,\n    opTypeId: function opTypeId(value) {\n      var pos = 0,\n        type_id = void 0;\n      if (typeof value === \"number\") type_id = value;else {\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n        try {\n          for (var _iterator = this.st_operations[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var op = _step.value;\n            if (op.operation_name === value) {\n              type_id = pos;\n              break;\n            }\n            pos++;\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n      }\n      return type_id;\n    },\n    fromByteBuffer: function fromByteBuffer(b) {\n      var type_id = b.readVarint32();\n      var st_operation = this.st_operations[type_id];\n      if (HEX_DUMP) {\n        console.error('static_variant id 0x' + type_id.toString(16) + ' (' + type_id + ')');\n      }\n      v.required(st_operation, 'operation ' + type_id);\n      return [type_id, st_operation.fromByteBuffer(b)];\n    },\n    appendByteBuffer: function appendByteBuffer(b, object) {\n      v.required(object);\n      var type_id = this.opTypeId(object[0]);\n      var st_operation = this.st_operations[type_id];\n      v.required(st_operation, 'operation ' + type_id);\n      b.writeVarint32(type_id);\n      st_operation.appendByteBuffer(b, object[1]);\n      return;\n    },\n    fromObject: function fromObject(object) {\n      v.required(object);\n      var type_id = this.opTypeId(object[0]);\n      var st_operation = this.st_operations[type_id];\n      v.required(st_operation, 'operation ' + type_id);\n      return [type_id, st_operation.fromObject(object[1])];\n    },\n    toObject: function toObject(object) {\n      var debug = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      if (debug.use_default && object === undefined) {\n        return [this.st_operations[0].operation_name, this.st_operations[0].toObject(undefined, debug)];\n      }\n      v.required(object);\n      var type_id = this.opTypeId(object[0]);\n      var st_operation = this.st_operations[type_id];\n      v.required(st_operation, 'operation ' + type_id);\n      return [st_operation.operation_name, st_operation.toObject(object[1], debug)];\n    },\n    compare: function compare(a, b) {\n      return strCmp(this.opTypeId(a[0]), this.opTypeId(b[0]));\n    }\n  };\n};\nTypes.map = function (key_st_operation, value_st_operation) {\n  return {\n    validate: function validate(array) {\n      if (!Array.isArray(array)) {\n        throw new Error(\"expecting array\");\n      }\n      var dup_map = {};\n      for (var i = 0, o; i < array.length; i++) {\n        o = array[i];\n        var ref;\n        if (!(o.length === 2)) {\n          throw new Error(\"expecting two elements\");\n        }\n        if (ref = _typeof(o[0]), ['number', 'string'].indexOf(ref) >= 0) {\n          if (dup_map[o[0]] !== undefined) {\n            throw new Error(\"duplicate (map)\");\n          }\n          dup_map[o[0]] = true;\n        }\n      }\n      return sortOperation(array, key_st_operation);\n    },\n    fromByteBuffer: function fromByteBuffer(b) {\n      var result = [];\n      var end = b.readVarint32();\n      for (var i = 0; 0 < end ? i < end : i > end; 0 < end ? i++ : i++) {\n        result.push([key_st_operation.fromByteBuffer(b), value_st_operation.fromByteBuffer(b)]);\n      }\n      return this.validate(result);\n    },\n    appendByteBuffer: function appendByteBuffer(b, object) {\n      this.validate(object);\n      b.writeVarint32(object.length);\n      for (var i = 0, o; i < object.length; i++) {\n        o = object[i];\n        key_st_operation.appendByteBuffer(b, o[0]);\n        value_st_operation.appendByteBuffer(b, o[1]);\n      }\n      return;\n    },\n    fromObject: function fromObject(object) {\n      v.required(object);\n      var result = [];\n      for (var i = 0, o; i < object.length; i++) {\n        o = object[i];\n        result.push([key_st_operation.fromObject(o[0]), value_st_operation.fromObject(o[1])]);\n      }\n      return this.validate(result);\n    },\n    toObject: function toObject(object) {\n      var debug = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      if (debug.use_default && object === undefined) {\n        return [[key_st_operation.toObject(undefined, debug), value_st_operation.toObject(undefined, debug)]];\n      }\n      v.required(object);\n      object = this.validate(object);\n      var result = [];\n      for (var i = 0, o; i < object.length; i++) {\n        o = object[i];\n        result.push([key_st_operation.toObject(o[0], debug), value_st_operation.toObject(o[1], debug)]);\n      }\n      return result;\n    }\n  };\n};\nTypes.public_key = {\n  toPublic: function toPublic(object) {\n    if (object.resolve !== undefined) {\n      object = object.resolve;\n    }\n    return object == null ? object : object.Q ? object : _ecc.PublicKey.fromStringOrThrow(object);\n  },\n  fromByteBuffer: function fromByteBuffer(b) {\n    return fp.public_key(b);\n  },\n  appendByteBuffer: function appendByteBuffer(b, object) {\n    v.required(object);\n    fp.public_key(b, Types.public_key.toPublic(object));\n    return;\n  },\n  fromObject: function fromObject(object) {\n    v.required(object);\n    if (object.Q) {\n      return object;\n    }\n    return Types.public_key.toPublic(object);\n  },\n  toObject: function toObject(object) {\n    var debug = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (debug.use_default && object === undefined) {\n      return _ecc.ecc_config.get('address_prefix') + \"859gxfnXyUriMgUeThh1fWv3oqcpLFyHa3TfFYC4PK2HqhToVM\";\n    }\n    v.required(object);\n    return object.toString();\n  },\n  compare: function compare(a, b) {\n    // sort ascending\n    return 1 * strCmp(a.toString(), b.toString());\n  }\n};\nTypes.address = {\n  _to_address: function _to_address(object) {\n    v.required(object);\n    if (object.addy) {\n      return object;\n    }\n    return _ecc.Address.fromString(object);\n  },\n  fromByteBuffer: function fromByteBuffer(b) {\n    return new _ecc.Address(fp.ripemd160(b));\n  },\n  appendByteBuffer: function appendByteBuffer(b, object) {\n    fp.ripemd160(b, Types.address._to_address(object).toBuffer());\n    return;\n  },\n  fromObject: function fromObject(object) {\n    return Types.address._to_address(object);\n  },\n  toObject: function toObject(object) {\n    var debug = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (debug.use_default && object === undefined) {\n      return _ecc.ecc_config.get('address_prefix') + \"664KmHxSuQyDsfwo4WEJvWpzg1QKdg67S\";\n    }\n    return Types.address._to_address(object).toString();\n  },\n  compare: function compare(a, b) {\n    // sort decending\n    return -1 * strCmp(a.toString(), b.toString());\n  }\n};\nvar strCmp = function strCmp(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n};\nvar firstEl = function firstEl(el) {\n  return Array.isArray(el) ? el[0] : el;\n};\nvar sortOperation = function sortOperation(array, st_operation) {\n  // console.log('operation.nosort', st_operation.nosort)\n  return st_operation.nosort ? array : st_operation.compare ? array.sort(function (a, b) {\n    return st_operation.compare(firstEl(a), firstEl(b));\n  }) :\n  // custom compare operation\n  array.sort(function (a, b) {\n    return typeof firstEl(a) === \"number\" && typeof firstEl(b) === \"number\" ? firstEl(a) - firstEl(b) :\n    // A binary string compare does not work. Performanance is very good so HEX is used..  localeCompare is another option.\n    Buffer.isBuffer(firstEl(a)) && Buffer.isBuffer(firstEl(b)) ? strCmp(firstEl(a).toString(\"hex\"), firstEl(b).toString(\"hex\")) : strCmp(firstEl(a).toString(), firstEl(b).toString());\n  });\n};","map":{"version":3,"names":["_slicedToArray","sliceIterator","arr","i","_arr","_n","_d","_e","undefined","_i","Symbol","iterator","_s","next","done","push","value","length","err","Array","isArray","Object","TypeError","_typeof","obj","constructor","prototype","_ecc","require","_number_utils","_config","_config2","_interopRequireDefault","__esModule","default","v","ObjectId","fp","chain_types","Types","module","exports","HEX_DUMP","process","env","npm_config__graphene_serializer_hex_dump","damm_checksum_8digit","Error","t","q0","d0","q1","d1","q2","d2","q3","d3","q4","d4","q5","d5","d6","d7","x","asset","fromByteBuffer","b","amount","readInt64","precision","readUint8","amount_string","symbol","b_copy","copy","offset","nai","Buffer","toBinary","readInt32","toString","padStart","to_String","skip","fromImpliedDecimal","_b_copy","replace","appendByteBuffer","object","parseInt","slice","checksum","Math","floor","expected_checksum","get","writeInt64","to_long","trim","test","res","split","startsWith","_checksum","_expected_checksum","dot","indexOf","writeUint32","writeUint8","append","toUpperCase","fromObject","toObject","debug","arguments","use_default","asset_symbol","nai_string","_b_copy2","uint8","require_range","uint16","readUint16","writeUint16","uint32","readUint32","MIN_SIGNED_32","pow","MAX_SIGNED_32","varint32","readVarint32","writeVarint32","int16","readInt16","writeInt16","int64","required","uint64","readUint64","writeUint64","unsigned","uint128","readBigInt64","string","readVString","writeVString","string_binary","len","bytes","size","isBuffer","zeros","num","join","bool","JSON","parse","void","array","st_operation","console","log","result","sortOperation","o","time_point_sec","getTime","Date","toISOString","int","set","validate","dup_map","ref","iterable","fixed_array","count","j","results","k","ref1","results1","id_type","reserved_spaces","object_type","resolve","get_instance","to_number","is_digits","object_type_id","protocol_id_type","name","protocol_ids","object_id_type","fromString","vote_id","TYPE","ID","type","id","require_test","_object$split","_object$split2","compare","a","optional","result_object","annotate","__optional","static_variant","_st_operations","nosort","st_operations","opTypeId","pos","type_id","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","op","operation_name","return","error","strCmp","map","key_st_operation","value_st_operation","end","public_key","toPublic","Q","PublicKey","fromStringOrThrow","ecc_config","address","_to_address","addy","Address","ripemd160","toBuffer","firstEl","el","sort"],"sources":["C:/Users/sunil/kalakaari/node_modules/@hiveio/hive-js/lib/auth/serializer/src/types.js"],"sourcesContent":["'use strict';\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _ecc = require('../../ecc');\n\nvar _number_utils = require('./number_utils');\n\nvar _config = require('../../../config.js');\n\nvar _config2 = _interopRequireDefault(_config);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Low-level types that make up operations\n\nvar v = require('./validation');\nvar ObjectId = require('./object_id');\nvar fp = require('./fast_parser');\nvar chain_types = require('./ChainTypes');\n//const BigInt = require('BigInt')\n\nvar Types = {};\nmodule.exports = Types;\n\nvar HEX_DUMP = process.env.npm_config__graphene_serializer_hex_dump;\n\n// Highly optimized implementation of Damm algorithm\n// https://en.wikipedia.org/wiki/Damm_algorithm\nfunction damm_checksum_8digit(value) {\n    if (value >= 100000000) throw new Error(\"Expected value less than 100000000, instead got \" + value);\n\n    var t = [0, 30, 10, 70, 50, 90, 80, 60, 40, 20, 70, 0, 90, 20, 10, 50, 40, 80, 60, 30, 40, 20, 0, 60, 80, 70, 10, 30, 50, 90, 10, 70, 50, 0, 90, 80, 30, 40, 20, 60, 60, 10, 20, 30, 0, 40, 50, 90, 70, 80, 30, 60, 70, 40, 20, 0, 90, 50, 80, 10, 50, 80, 60, 90, 70, 20, 0, 10, 30, 40, 80, 90, 40, 50, 30, 60, 20, 0, 10, 70, 90, 40, 30, 80, 60, 10, 70, 20, 0, 50, 20, 50, 80, 10, 40, 30, 60, 70, 90, 0];\n\n    var q0 = value / 10;\n    var d0 = value % 10;\n    var q1 = q0 / 10;\n    var d1 = q0 % 10;\n    var q2 = q1 / 10;\n    var d2 = q1 % 10;\n    var q3 = q2 / 10;\n    var d3 = q2 % 10;\n    var q4 = q3 / 10;\n    var d4 = q3 % 10;\n    var q5 = q4 / 10;\n    var d5 = q4 % 10;\n    var d6 = q5 % 10;\n    var d7 = q5 / 10;\n\n    var x = t[d7];\n    x = t[x + d6];\n    x = t[x + d5];\n    x = t[x + d4];\n    x = t[x + d3];\n    x = t[x + d2];\n    x = t[x + d1];\n    x = t[x + d0];\n\n    return x / 10;\n}\n\n/**\n* Asset symbols contain the following information\n*\n*  4 bit PRECISION\n*  4 bit RESERVED\n*  CHAR[6] up to 6 upper case alpha numeric ascii characters,\n*  char = \\0  null terminated\n*\n*  It is treated as a uint64_t for all internal operations, but\n*  is easily converted to something that can be displayed.\n*\n*  Legacy serialization of assets\n*  0000pppp aaaaaaaa bbbbbbbb cccccccc dddddddd eeeeeeee ffffffff 00000000\n*  Symbol = abcdef\n*\n*  NAI serialization of assets\n*  aaa1pppp bbbbbbbb cccccccc dddddddd\n*  NAI = (MSB to LSB) dddddddd cccccccc bbbbbbbb aaa\n*\n*  NAI internal storage of legacy assets\n*/\nTypes.asset = {\n    fromByteBuffer: function fromByteBuffer(b) {\n        var amount = b.readInt64();\n        var precision = b.readUint8();\n        var amount_string = \"\";\n        var symbol = \"\";\n\n        if (precision >= 16) {\n            // NAI Case\n            var b_copy = b.copy(b.offset - 1, b.offset + 3);\n            var nai = new Buffer(b_copy.toBinary(), \"binary\").readInt32();\n            nai = nai / 32;\n            symbol = \"@@\" + nai.toString().padStart(8, '0') + damm_checksum_8digit(nai).to_String();\n            precision = precision % 16;\n            b.skip(3);\n            amount_string = (0, _number_utils.fromImpliedDecimal)(amount, precision);\n        } else {\n            // Legacy Case\n            var _b_copy = b.copy(b.offset, b.offset + 7);\n            symbol = new Buffer(_b_copy.toBinary(), \"binary\").toString().replace(/\\x00/g, \"\");\n            b.skip(7);\n            // \"1.000 HIVE\" always written with full precision\n            amount_string = (0, _number_utils.fromImpliedDecimal)(amount, precision);\n        }\n\n        return amount_string + \" \" + symbol;\n    },\n    appendByteBuffer: function appendByteBuffer(b, object) {\n        var amount = \"\";\n        var symbol = \"\";\n        var nai = 0;\n        var precision = 0;\n\n        if (object[\"nai\"]) {\n            symbol = object[\"nai\"];\n            nai = parseInt(symbol.slice(2));\n            var checksum = nai % 10;\n            nai = Math.floor(nai / 10);\n            var expected_checksum = damm_checksum_8digit(nai);\n\n            switch (object[\"nai\"]) {\n                case \"@@000000021\":\n                    precision = 3;\n                    symbol = _config2.default.get(\"address_prefix\") == \"STM\" ? \"STEEM\" : \"TESTS\";\n                    break;\n                case \"@@000000013\":\n                    precision = 3;\n                    symbol = _config2.default.get(\"address_prefix\") == \"STM\" ? \"SBD\" : \"TBD\";\n                    break;\n                case \"@@000000037\":\n                    precision = 6;\n                    symbol = \"VESTS\";\n                    break;\n            }\n\n            precision = parseInt(object[\"precision\"]);\n            b.writeInt64(v.to_long(parseInt(object[\"amount\"])));\n        } else {\n            object = object.trim();\n            if (!/^[0-9]+\\.?[0-9]* [A-Za-z0-9@]+$/.test(object)) throw new Error(\"Expecting amount like '99.000 SYMBOL', instead got '\" + object + \"'\");\n\n            var res = object.split(\" \");\n            amount = res[0];\n            symbol = res[1];\n\n            // Hive workaround for now\n            symbol = symbol == \"HIVE\" ? \"STEEM\" : symbol == \"HBD\" ? \"SBD\" : symbol;\n\n            if (symbol.startsWith(\"@@\")) {\n                // NAI Case\n                nai = parseInt(symbol.slice(2));\n                var _checksum = nai % 10;\n                nai = Math.floor(nai / 10);\n                var _expected_checksum = damm_checksum_8digit(nai);\n            } else if (symbol.length > 6) throw new Error(\"Symbols are not longer than 6 characters \" + symbol + \"-\" + symbol.length);\n\n            b.writeInt64(v.to_long(amount.replace(\".\", \"\")));\n            var dot = amount.indexOf(\".\"); // 0.000\n            precision = dot === -1 ? 0 : amount.length - dot - 1;\n        }\n\n        if (symbol.startsWith(\"@@\")) {\n            nai = (nai << 5) + 16 + precision;\n            b.writeUint32(nai);\n        } else {\n            b.writeUint8(precision);\n            b.append(symbol.toUpperCase(), 'binary');\n            for (var i = 0; i < 7 - symbol.length; i++) {\n                b.writeUint8(0);\n            }\n        }\n\n        return;\n    },\n    fromObject: function fromObject(object) {\n        return object;\n    },\n    toObject: function toObject(object) {\n        var debug = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n        if (debug.use_default && object === undefined) {\n            return \"0.000 HIVE\";\n        }\n        return object;\n    }\n};\n\nTypes.asset_symbol = {\n    fromByteBuffer: function fromByteBuffer(b) {\n        var precision = b.readUint8();\n        var amount_string = \"\";\n        var nai_string = \"\";\n\n        if (precision >= 16) {\n            // NAI Case\n            var b_copy = b.copy(b.offset - 1, b.offset + 3);\n            var nai = new Buffer(b_copy.toBinary(), \"binary\").readInt32();\n            nai = nai / 32;\n            nai_string = \"@@\" + nai.toString().padStart(8, '0') + damm_checksum_8digit(nai).to_String();\n            precision = precision % 16;\n            b.skip(3);\n        } else {\n            // Legacy Case\n            var _b_copy2 = b.copy(b.offset, b.offset + 7);\n            var symbol = new Buffer(_b_copy2.toBinary(), \"binary\").toString().replace(/\\x00/g, \"\");\n            if (symbol == \"STEEM\" || symbol == \"TESTS\") nai_string = \"@@000000021\";else if (symbol == \"SBD\" || symbol == \"TBD\") nai_string = \"@@000000013\";else if (symbol == \"VESTS\") nai_string = \"@@000000037\";else throw new Error(\"Expecting non-smt core asset symbol, instead got '\" + symbol + \"'\");\n            b.skip(7);\n        }\n\n        return { \"nai\": nai_string, \"precision\": precision };\n    },\n    appendByteBuffer: function appendByteBuffer(b, object) {\n\n        var nai = 0;\n        if (!object[\"nai\"].startsWith(\"@@\")) throw new Error(\"Asset Symbols NAIs must be prefixed with '@@'. Was \" + object[\"nai\"]);\n\n        nai = parseInt(object[\"nai\"].slice(2));\n        var checksum = nai % 10;\n        nai = Math.floor(nai / 10);\n        var expected_checksum = damm_checksum_8digit(nai);\n\n        var precision = 0;\n        var symbol = \"\";\n        switch (object[\"nai\"]) {\n            case \"@@000000021\":\n                precision = 3;\n                symbol = _config2.default.get(\"address_prefix\") == \"STM\" ? \"STEEM\" : \"TESTS\";\n                break;\n            case \"@@000000013\":\n                precision = 3;\n                symbol = _config2.default.get(\"address_prefix\") == \"STM\" ? \"SBD\" : \"TBD\";\n                break;\n            case \"@@000000037\":\n                precision = 6;\n                symbol = \"VESTS\";\n                break;\n        }\n\n        if (precision > 0) {\n            //Core Symbol Case\n            b.writeUint8(precision);\n            b.append(symbol, 'binary');\n            for (var i = 0; i < 7 - symbol.length; i++) {\n                b.writeUint8(0);\n            }\n        } else {\n            nai = (nai << 5) + 16 + object[\"precision\"];\n            b.writeUint32(nai);\n        }\n\n        return;\n    },\n    fromObject: function fromObject(object) {\n        return object;\n    },\n    toObject: function toObject(object) {\n        var debug = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n        if (debug.use_default && object === undefined) {\n            return \"STEEM\";\n        }\n        return object;\n    }\n};\n\nTypes.uint8 = {\n    fromByteBuffer: function fromByteBuffer(b) {\n        return b.readUint8();\n    },\n    appendByteBuffer: function appendByteBuffer(b, object) {\n        v.require_range(0, 0xFF, object, 'uint8 ' + object);\n        b.writeUint8(object);\n        return;\n    },\n    fromObject: function fromObject(object) {\n        v.require_range(0, 0xFF, object, 'uint8 ' + object);\n        return object;\n    },\n    toObject: function toObject(object) {\n        var debug = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n        if (debug.use_default && object === undefined) {\n            return 0;\n        }\n        v.require_range(0, 0xFF, object, 'uint8 ' + object);\n        return parseInt(object);\n    }\n};\n\nTypes.uint16 = {\n    fromByteBuffer: function fromByteBuffer(b) {\n        return b.readUint16();\n    },\n    appendByteBuffer: function appendByteBuffer(b, object) {\n        v.require_range(0, 0xFFFF, object, 'uint16 ' + object);\n        b.writeUint16(object);\n        return;\n    },\n    fromObject: function fromObject(object) {\n        v.require_range(0, 0xFFFF, object, 'uint16 ' + object);\n        return object;\n    },\n    toObject: function toObject(object) {\n        var debug = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n        if (debug.use_default && object === undefined) {\n            return 0;\n        }\n        v.require_range(0, 0xFFFF, object, 'uint16 ' + object);\n        return parseInt(object);\n    }\n};\n\nTypes.uint32 = {\n    fromByteBuffer: function fromByteBuffer(b) {\n        return b.readUint32();\n    },\n    appendByteBuffer: function appendByteBuffer(b, object) {\n        v.require_range(0, 0xFFFFFFFF, object, 'uint32 ' + object);\n        b.writeUint32(object);\n        return;\n    },\n    fromObject: function fromObject(object) {\n        v.require_range(0, 0xFFFFFFFF, object, 'uint32 ' + object);\n        return object;\n    },\n    toObject: function toObject(object) {\n        var debug = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n        if (debug.use_default && object === undefined) {\n            return 0;\n        }\n        v.require_range(0, 0xFFFFFFFF, object, 'uint32 ' + object);\n        return parseInt(object);\n    }\n};\n\nvar MIN_SIGNED_32 = -1 * Math.pow(2, 31);\nvar MAX_SIGNED_32 = Math.pow(2, 31) - 1;\n\nTypes.varint32 = {\n    fromByteBuffer: function fromByteBuffer(b) {\n        return b.readVarint32();\n    },\n    appendByteBuffer: function appendByteBuffer(b, object) {\n        v.require_range(MIN_SIGNED_32, MAX_SIGNED_32, object, 'uint32 ' + object);\n        b.writeVarint32(object);\n        return;\n    },\n    fromObject: function fromObject(object) {\n        v.require_range(MIN_SIGNED_32, MAX_SIGNED_32, object, 'uint32 ' + object);\n        return object;\n    },\n    toObject: function toObject(object) {\n        var debug = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n        if (debug.use_default && object === undefined) {\n            return 0;\n        }\n        v.require_range(MIN_SIGNED_32, MAX_SIGNED_32, object, 'uint32 ' + object);\n        return parseInt(object);\n    }\n};\n\nTypes.int16 = {\n    fromByteBuffer: function fromByteBuffer(b) {\n        return b.readInt16();\n    },\n    appendByteBuffer: function appendByteBuffer(b, object) {\n        b.writeInt16(object);\n        return;\n    },\n    fromObject: function fromObject(object) {\n        return object;\n    },\n    toObject: function toObject(object) {\n        var debug = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n        if (debug.use_default && object === undefined) {\n            return 0;\n        }\n        return parseInt(object);\n    }\n};\n\nTypes.int64 = {\n    fromByteBuffer: function fromByteBuffer(b) {\n        return b.readInt64();\n    },\n    appendByteBuffer: function appendByteBuffer(b, object) {\n        v.required(object);\n        b.writeInt64(v.to_long(object));\n        return;\n    },\n    fromObject: function fromObject(object) {\n        v.required(object);\n        return v.to_long(object);\n    },\n    toObject: function toObject(object) {\n        var debug = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n        if (debug.use_default && object === undefined) {\n            return \"0\";\n        }\n        v.required(object);\n        return v.to_long(object).toString();\n    }\n};\n\nTypes.uint64 = {\n    fromByteBuffer: function fromByteBuffer(b) {\n        return b.readUint64();\n    },\n    appendByteBuffer: function appendByteBuffer(b, object) {\n        b.writeUint64(v.to_long(v.unsigned(object)));\n        return;\n    },\n    fromObject: function fromObject(object) {\n        return v.to_long(v.unsigned(object));\n    },\n    toObject: function toObject(object) {\n        var debug = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n        if (debug.use_default && object === undefined) {\n            return \"0\";\n        }\n        return v.to_long(object).toString();\n    }\n};\n\nTypes.uint128 = {\n    fromByteBuffer: function fromByteBuffer(b) {\n        b.readBigInt64();\n        return b.readBigInt64();\n    },\n    appendByteBuffer: function appendByteBuffer(b, object) {\n        b.writeUint64(v.to_long(v.unsigned(0)));\n        b.writeUint64(v.to_long(v.unsigned(object)));\n        return;\n    },\n    fromObject: function fromObject(object) {\n        return v.to_long(v.unsigned(object));\n    },\n    toObject: function toObject(object) {\n        var debug = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n        if (debug.use_default && object === undefined) {\n            return \"0\";\n        }\n        return v.to_long(object).toString();\n    }\n};\n\nTypes.string = {\n    fromByteBuffer: function fromByteBuffer(b) {\n        return new Buffer(b.readVString(), 'utf8');\n    },\n    appendByteBuffer: function appendByteBuffer(b, object) {\n        v.required(object);\n        b.writeVString(object.toString());\n        return;\n    },\n    fromObject: function fromObject(object) {\n        v.required(object);\n        return new Buffer(object, 'utf8');\n    },\n    toObject: function toObject(object) {\n        var debug = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n        if (debug.use_default && object === undefined) {\n            return \"\";\n        }\n        return object.toString('utf8');\n    }\n};\n\nTypes.string_binary = {\n    fromByteBuffer: function fromByteBuffer(b) {\n        var b_copy;\n        var len = b.readVarint32();\n        b_copy = b.copy(b.offset, b.offset + len), b.skip(len);\n        return new Buffer(b_copy.toBinary(), 'binary');\n    },\n    appendByteBuffer: function appendByteBuffer(b, object) {\n        b.writeVarint32(object.length);\n        b.append(object.toString('binary'), 'binary');\n        return;\n    },\n    fromObject: function fromObject(object) {\n        v.required(object);\n        return new Buffer(object);\n    },\n    toObject: function toObject(object) {\n        var debug = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n        if (debug.use_default && object === undefined) {\n            return \"\";\n        }\n        return object.toString();\n    }\n};\n\nTypes.bytes = function (size) {\n    return {\n        fromByteBuffer: function fromByteBuffer(b) {\n            if (size === undefined) {\n                var b_copy;\n                var len = b.readVarint32();\n                b_copy = b.copy(b.offset, b.offset + len), b.skip(len);\n                return new Buffer(b_copy.toBinary(), 'binary');\n            } else {\n                b_copy = b.copy(b.offset, b.offset + size), b.skip(size);\n                return new Buffer(b_copy.toBinary(), 'binary');\n            }\n        },\n        appendByteBuffer: function appendByteBuffer(b, object) {\n            v.required(object);\n            if (typeof object === \"string\") object = new Buffer(object, \"hex\");\n\n            if (size === undefined) {\n                b.writeVarint32(object.length);\n            }\n            b.append(object.toString('binary'), 'binary');\n            return;\n        },\n        fromObject: function fromObject(object) {\n            v.required(object);\n            if (Buffer.isBuffer(object)) return object;\n\n            return new Buffer(object, 'hex');\n        },\n        toObject: function toObject(object) {\n            var debug = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n            if (debug.use_default && object === undefined) {\n                var zeros = function zeros(num) {\n                    return new Array(num).join(\"00\");\n                };\n                return zeros(size);\n            }\n            v.required(object);\n            return object.toString('hex');\n        }\n    };\n};\n\nTypes.bool = {\n    fromByteBuffer: function fromByteBuffer(b) {\n        return b.readUint8() === 1;\n    },\n    appendByteBuffer: function appendByteBuffer(b, object) {\n        // supports boolean or integer\n        b.writeUint8(JSON.parse(object) ? 1 : 0);\n        return;\n    },\n    fromObject: function fromObject(object) {\n        return JSON.parse(object) ? true : false;\n    },\n    toObject: function toObject(object) {\n        var debug = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n        if (debug.use_default && object === undefined) {\n            return false;\n        }\n        return JSON.parse(object) ? true : false;\n    }\n};\n\nTypes.void = {\n    fromByteBuffer: function fromByteBuffer(b) {\n        throw new Error(\"(void) undefined type\");\n    },\n    appendByteBuffer: function appendByteBuffer(b, object) {\n        throw new Error(\"(void) undefined type\");\n    },\n    fromObject: function fromObject(object) {\n        throw new Error(\"(void) undefined type\");\n    },\n    toObject: function toObject(object) {\n        var debug = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n        if (debug.use_default && object === undefined) {\n            return undefined;\n        }\n        throw new Error(\"(void) undefined type\");\n    }\n};\n\nTypes.array = function (st_operation) {\n    return {\n        fromByteBuffer: function fromByteBuffer(b) {\n            var size = b.readVarint32();\n            if (HEX_DUMP) {\n                console.log(\"varint32 size = \" + size.toString(16));\n            }\n            var result = [];\n            for (var i = 0; 0 < size ? i < size : i > size; 0 < size ? i++ : i++) {\n                result.push(st_operation.fromByteBuffer(b));\n            }\n            return sortOperation(result, st_operation);\n        },\n        appendByteBuffer: function appendByteBuffer(b, object) {\n            v.required(object);\n            object = sortOperation(object, st_operation);\n            b.writeVarint32(object.length);\n            for (var i = 0, o; i < object.length; i++) {\n                o = object[i];\n                st_operation.appendByteBuffer(b, o);\n            }\n        },\n        fromObject: function fromObject(object) {\n            v.required(object);\n            object = sortOperation(object, st_operation);\n            var result = [];\n            for (var i = 0, o; i < object.length; i++) {\n                o = object[i];\n                result.push(st_operation.fromObject(o));\n            }\n            return result;\n        },\n        toObject: function toObject(object) {\n            var debug = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n            if (debug.use_default && object === undefined) {\n                return [st_operation.toObject(object, debug)];\n            }\n            v.required(object);\n            object = sortOperation(object, st_operation);\n\n            var result = [];\n            for (var i = 0, o; i < object.length; i++) {\n                o = object[i];\n                result.push(st_operation.toObject(o, debug));\n            }\n            return result;\n        }\n    };\n};\n\nTypes.time_point_sec = {\n    fromByteBuffer: function fromByteBuffer(b) {\n        return b.readUint32();\n    },\n    appendByteBuffer: function appendByteBuffer(b, object) {\n        if (typeof object !== \"number\") object = Types.time_point_sec.fromObject(object);\n\n        b.writeUint32(object);\n        return;\n    },\n    fromObject: function fromObject(object) {\n        v.required(object);\n\n        if (typeof object === \"number\") return object;\n\n        if (object.getTime) return Math.floor(object.getTime() / 1000);\n\n        if (typeof object !== \"string\") throw new Error(\"Unknown date type: \" + object);\n\n        if (typeof object === \"string\" && !/Z$/.test(object)) object = object + \"Z\";\n\n        return Math.floor(new Date(object).getTime() / 1000);\n    },\n    toObject: function toObject(object) {\n        var debug = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n        if (debug.use_default && object === undefined) return new Date(0).toISOString().split('.')[0];\n\n        v.required(object);\n\n        if (typeof object === \"string\") return object;\n\n        if (object.getTime) return object.toISOString().split('.')[0];\n\n        var int = parseInt(object);\n        v.require_range(0, 0xFFFFFFFF, int, 'uint32 ' + object);\n        return new Date(int * 1000).toISOString().split('.')[0];\n    }\n};\n\nTypes.set = function (st_operation) {\n    return {\n        validate: function validate(array) {\n            var dup_map = {};\n            for (var i = 0, o; i < array.length; i++) {\n                o = array[i];\n                var ref;\n                if (ref = typeof o === 'undefined' ? 'undefined' : _typeof(o), ['string', 'number'].indexOf(ref) >= 0) {\n                    if (dup_map[o] !== undefined) {\n                        throw new Error(\"duplicate (set)\");\n                    }\n                    dup_map[o] = true;\n                }\n            }\n            return sortOperation(array, st_operation);\n        },\n        fromByteBuffer: function fromByteBuffer(b) {\n            var size = b.readVarint32();\n            if (HEX_DUMP) {\n                console.log(\"varint32 size = \" + size.toString(16));\n            }\n            return this.validate(function () {\n                var result = [];\n                for (var i = 0; 0 < size ? i < size : i > size; 0 < size ? i++ : i++) {\n                    result.push(st_operation.fromByteBuffer(b));\n                }\n                return result;\n            }());\n        },\n        appendByteBuffer: function appendByteBuffer(b, object) {\n            if (!object) {\n                object = [];\n            }\n            b.writeVarint32(object.length);\n            var iterable = this.validate(object);\n            for (var i = 0, o; i < iterable.length; i++) {\n                o = iterable[i];\n                st_operation.appendByteBuffer(b, o);\n            }\n            return;\n        },\n        fromObject: function fromObject(object) {\n            if (!object) {\n                object = [];\n            }\n            return this.validate(function () {\n                var result = [];\n                for (var i = 0, o; i < object.length; i++) {\n                    o = object[i];\n                    result.push(st_operation.fromObject(o));\n                }\n                return result;\n            }());\n        },\n        toObject: function toObject(object) {\n            var debug = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n            if (debug.use_default && object === undefined) {\n                return [st_operation.toObject(object, debug)];\n            }\n            if (!object) {\n                object = [];\n            }\n            return this.validate(function () {\n                var result = [];\n                for (var i = 0, o; i < object.length; i++) {\n                    o = object[i];\n                    result.push(st_operation.toObject(o, debug));\n                }\n                return result;\n            }());\n        }\n    };\n};\n\n// global_parameters_update_operation current_fees\nTypes.fixed_array = function (count, st_operation) {\n    return {\n        fromByteBuffer: function fromByteBuffer(b) {\n            var i, j, ref, results;\n            results = [];\n            for (i = j = 0, ref = count; j < ref; i = j += 1) {\n                results.push(st_operation.fromByteBuffer(b));\n            }\n            return sortOperation(results, st_operation);\n        },\n        appendByteBuffer: function appendByteBuffer(b, object) {\n            var i, j, ref;\n            if (count !== 0) {\n                v.required(object);\n                object = sortOperation(object, st_operation);\n            }\n            for (i = j = 0, ref = count; j < ref; i = j += 1) {\n                st_operation.appendByteBuffer(b, object[i]);\n            }\n        },\n        fromObject: function fromObject(object) {\n            var i, j, ref, results;\n            if (count !== 0) {\n                v.required(object);\n            }\n            results = [];\n            for (i = j = 0, ref = count; j < ref; i = j += 1) {\n                results.push(st_operation.fromObject(object[i]));\n            }\n            return results;\n        },\n        toObject: function toObject(object, debug) {\n            var i, j, k, ref, ref1, results, results1;\n            if (debug == null) {\n                debug = {};\n            }\n            if (debug.use_default && object === void 0) {\n                results = [];\n                for (i = j = 0, ref = count; j < ref; i = j += 1) {\n                    results.push(st_operation.toObject(void 0, debug));\n                }\n                return results;\n            }\n            if (count !== 0) {\n                v.required(object);\n            }\n            results1 = [];\n            for (i = k = 0, ref1 = count; k < ref1; i = k += 1) {\n                results1.push(st_operation.toObject(object[i], debug));\n            }\n            return results1;\n        }\n    };\n};\n\n/* Supports instance numbers (11) or object types (1.2.11).  Object type\nvalidation is enforced when an object type is used. */\nvar id_type = function id_type(reserved_spaces, object_type) {\n    v.required(reserved_spaces, \"reserved_spaces\");\n    v.required(object_type, \"object_type\");\n    return {\n        fromByteBuffer: function fromByteBuffer(b) {\n            return b.readVarint32();\n        },\n        appendByteBuffer: function appendByteBuffer(b, object) {\n            v.required(object);\n            if (object.resolve !== undefined) {\n                object = object.resolve;\n            }\n            // convert 1.2.n into just n\n            if (/^[0-9]+\\.[0-9]+\\.[0-9]+$/.test(object)) {\n                object = v.get_instance(reserved_spaces, object_type, object);\n            }\n            b.writeVarint32(v.to_number(object));\n            return;\n        },\n        fromObject: function fromObject(object) {\n            v.required(object);\n            if (object.resolve !== undefined) {\n                object = object.resolve;\n            }\n            if (v.is_digits(object)) {\n                return v.to_number(object);\n            }\n            return v.get_instance(reserved_spaces, object_type, object);\n        },\n        toObject: function toObject(object) {\n            var debug = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n            var object_type_id = chain_types.object_type[object_type];\n            if (debug.use_default && object === undefined) {\n                return reserved_spaces + '.' + object_type_id + '.0';\n            }\n            v.required(object);\n            if (object.resolve !== undefined) {\n                object = object.resolve;\n            }\n            if (/^[0-9]+\\.[0-9]+\\.[0-9]+$/.test(object)) {\n                object = v.get_instance(reserved_spaces, object_type, object);\n            }\n\n            return reserved_spaces + '.' + object_type_id + '.' + object;\n        }\n    };\n};\n\nTypes.protocol_id_type = function (name) {\n    v.required(name, \"name\");\n    return id_type(chain_types.reserved_spaces.protocol_ids, name);\n};\n\nTypes.object_id_type = {\n    fromByteBuffer: function fromByteBuffer(b) {\n        return ObjectId.fromByteBuffer(b);\n    },\n    appendByteBuffer: function appendByteBuffer(b, object) {\n        v.required(object);\n        if (object.resolve !== undefined) {\n            object = object.resolve;\n        }\n        object = ObjectId.fromString(object);\n        object.appendByteBuffer(b);\n        return;\n    },\n    fromObject: function fromObject(object) {\n        v.required(object);\n        if (object.resolve !== undefined) {\n            object = object.resolve;\n        }\n        return ObjectId.fromString(object);\n    },\n    toObject: function toObject(object) {\n        var debug = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n        if (debug.use_default && object === undefined) {\n            return \"0.0.0\";\n        }\n        v.required(object);\n        if (object.resolve !== undefined) {\n            object = object.resolve;\n        }\n        object = ObjectId.fromString(object);\n        return object.toString();\n    }\n};\n\nTypes.vote_id = { TYPE: 0x000000FF,\n    ID: 0xFFFFFF00,\n    fromByteBuffer: function fromByteBuffer(b) {\n        var value = b.readUint32();\n        return {\n            type: value & this.TYPE,\n            id: value & this.ID\n        };\n    },\n    appendByteBuffer: function appendByteBuffer(b, object) {\n        v.required(object);\n        if (object === \"string\") object = Types.vote_id.fromObject(object);\n\n        var value = object.id << 8 | object.type;\n        b.writeUint32(value);\n        return;\n    },\n    fromObject: function fromObject(object) {\n        v.required(object, \"(type vote_id)\");\n        if ((typeof object === 'undefined' ? 'undefined' : _typeof(object)) === \"object\") {\n            v.required(object.type, \"type\");\n            v.required(object.id, \"id\");\n            return object;\n        }\n        v.require_test(/^[0-9]+:[0-9]+$/, object, 'vote_id format ' + object);\n\n        var _object$split = object.split(':'),\n            _object$split2 = _slicedToArray(_object$split, 2),\n            type = _object$split2[0],\n            id = _object$split2[1];\n\n        v.require_range(0, 0xff, type, 'vote type ' + object);\n        v.require_range(0, 0xffffff, id, 'vote id ' + object);\n        return { type: type, id: id };\n    },\n    toObject: function toObject(object) {\n        var debug = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n        if (debug.use_default && object === undefined) {\n            return \"0:0\";\n        }\n        v.required(object);\n        if (typeof object === \"string\") object = Types.vote_id.fromObject(object);\n\n        return object.type + \":\" + object.id;\n    },\n    compare: function compare(a, b) {\n        if ((typeof a === 'undefined' ? 'undefined' : _typeof(a)) !== \"object\") a = Types.vote_id.fromObject(a);\n        if ((typeof b === 'undefined' ? 'undefined' : _typeof(b)) !== \"object\") b = Types.vote_id.fromObject(b);\n        return parseInt(a.id) - parseInt(b.id);\n    }\n};\n\nTypes.optional = function (st_operation) {\n    v.required(st_operation, \"st_operation\");\n    return {\n        fromByteBuffer: function fromByteBuffer(b) {\n            if (!(b.readUint8() === 1)) {\n                return undefined;\n            }\n            return st_operation.fromByteBuffer(b);\n        },\n        appendByteBuffer: function appendByteBuffer(b, object) {\n            if (object !== null && object !== undefined) {\n                b.writeUint8(1);\n                st_operation.appendByteBuffer(b, object);\n            } else {\n                b.writeUint8(0);\n            }\n            return;\n        },\n        fromObject: function fromObject(object) {\n            if (object === undefined) {\n                return undefined;\n            }\n            return st_operation.fromObject(object);\n        },\n        toObject: function toObject(object) {\n            var debug = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n            // toObject is only null save if use_default is true\n            var result_object = function () {\n                if (!debug.use_default && object === undefined) {\n                    return undefined;\n                } else {\n                    return st_operation.toObject(object, debug);\n                }\n            }();\n\n            if (debug.annotate) {\n                if ((typeof result_object === 'undefined' ? 'undefined' : _typeof(result_object)) === \"object\") {\n                    result_object.__optional = \"parent is optional\";\n                } else {\n                    result_object = { __optional: result_object };\n                }\n            }\n            return result_object;\n        }\n    };\n};\n\nTypes.static_variant = function (_st_operations) {\n    return {\n        nosort: true,\n        st_operations: _st_operations,\n        opTypeId: function opTypeId(value) {\n            var pos = 0,\n                type_id = void 0;\n            if (typeof value === \"number\") type_id = value;else {\n                var _iteratorNormalCompletion = true;\n                var _didIteratorError = false;\n                var _iteratorError = undefined;\n\n                try {\n                    for (var _iterator = this.st_operations[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                        var op = _step.value;\n\n                        if (op.operation_name === value) {\n                            type_id = pos;\n                            break;\n                        }\n                        pos++;\n                    }\n                } catch (err) {\n                    _didIteratorError = true;\n                    _iteratorError = err;\n                } finally {\n                    try {\n                        if (!_iteratorNormalCompletion && _iterator.return) {\n                            _iterator.return();\n                        }\n                    } finally {\n                        if (_didIteratorError) {\n                            throw _iteratorError;\n                        }\n                    }\n                }\n            }\n            return type_id;\n        },\n        fromByteBuffer: function fromByteBuffer(b) {\n            var type_id = b.readVarint32();\n            var st_operation = this.st_operations[type_id];\n            if (HEX_DUMP) {\n                console.error('static_variant id 0x' + type_id.toString(16) + ' (' + type_id + ')');\n            }\n            v.required(st_operation, 'operation ' + type_id);\n            return [type_id, st_operation.fromByteBuffer(b)];\n        },\n        appendByteBuffer: function appendByteBuffer(b, object) {\n            v.required(object);\n            var type_id = this.opTypeId(object[0]);\n            var st_operation = this.st_operations[type_id];\n            v.required(st_operation, 'operation ' + type_id);\n            b.writeVarint32(type_id);\n            st_operation.appendByteBuffer(b, object[1]);\n            return;\n        },\n        fromObject: function fromObject(object) {\n            v.required(object);\n            var type_id = this.opTypeId(object[0]);\n            var st_operation = this.st_operations[type_id];\n            v.required(st_operation, 'operation ' + type_id);\n            return [type_id, st_operation.fromObject(object[1])];\n        },\n        toObject: function toObject(object) {\n            var debug = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n            if (debug.use_default && object === undefined) {\n                return [this.st_operations[0].operation_name, this.st_operations[0].toObject(undefined, debug)];\n            }\n            v.required(object);\n            var type_id = this.opTypeId(object[0]);\n            var st_operation = this.st_operations[type_id];\n            v.required(st_operation, 'operation ' + type_id);\n            return [st_operation.operation_name, st_operation.toObject(object[1], debug)];\n        },\n        compare: function compare(a, b) {\n            return strCmp(this.opTypeId(a[0]), this.opTypeId(b[0]));\n        }\n    };\n};\n\nTypes.map = function (key_st_operation, value_st_operation) {\n    return {\n        validate: function validate(array) {\n            if (!Array.isArray(array)) {\n                throw new Error(\"expecting array\");\n            }\n            var dup_map = {};\n            for (var i = 0, o; i < array.length; i++) {\n                o = array[i];\n                var ref;\n                if (!(o.length === 2)) {\n                    throw new Error(\"expecting two elements\");\n                }\n                if (ref = _typeof(o[0]), ['number', 'string'].indexOf(ref) >= 0) {\n                    if (dup_map[o[0]] !== undefined) {\n                        throw new Error(\"duplicate (map)\");\n                    }\n                    dup_map[o[0]] = true;\n                }\n            }\n            return sortOperation(array, key_st_operation);\n        },\n        fromByteBuffer: function fromByteBuffer(b) {\n            var result = [];\n            var end = b.readVarint32();\n            for (var i = 0; 0 < end ? i < end : i > end; 0 < end ? i++ : i++) {\n                result.push([key_st_operation.fromByteBuffer(b), value_st_operation.fromByteBuffer(b)]);\n            }\n            return this.validate(result);\n        },\n        appendByteBuffer: function appendByteBuffer(b, object) {\n            this.validate(object);\n            b.writeVarint32(object.length);\n            for (var i = 0, o; i < object.length; i++) {\n                o = object[i];\n                key_st_operation.appendByteBuffer(b, o[0]);\n                value_st_operation.appendByteBuffer(b, o[1]);\n            }\n            return;\n        },\n        fromObject: function fromObject(object) {\n            v.required(object);\n            var result = [];\n            for (var i = 0, o; i < object.length; i++) {\n                o = object[i];\n                result.push([key_st_operation.fromObject(o[0]), value_st_operation.fromObject(o[1])]);\n            }\n            return this.validate(result);\n        },\n        toObject: function toObject(object) {\n            var debug = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n            if (debug.use_default && object === undefined) {\n                return [[key_st_operation.toObject(undefined, debug), value_st_operation.toObject(undefined, debug)]];\n            }\n            v.required(object);\n            object = this.validate(object);\n            var result = [];\n            for (var i = 0, o; i < object.length; i++) {\n                o = object[i];\n                result.push([key_st_operation.toObject(o[0], debug), value_st_operation.toObject(o[1], debug)]);\n            }\n            return result;\n        }\n    };\n};\n\nTypes.public_key = {\n    toPublic: function toPublic(object) {\n        if (object.resolve !== undefined) {\n            object = object.resolve;\n        }\n        return object == null ? object : object.Q ? object : _ecc.PublicKey.fromStringOrThrow(object);\n    },\n    fromByteBuffer: function fromByteBuffer(b) {\n        return fp.public_key(b);\n    },\n    appendByteBuffer: function appendByteBuffer(b, object) {\n        v.required(object);\n        fp.public_key(b, Types.public_key.toPublic(object));\n        return;\n    },\n    fromObject: function fromObject(object) {\n        v.required(object);\n        if (object.Q) {\n            return object;\n        }\n        return Types.public_key.toPublic(object);\n    },\n    toObject: function toObject(object) {\n        var debug = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n        if (debug.use_default && object === undefined) {\n            return _ecc.ecc_config.get('address_prefix') + \"859gxfnXyUriMgUeThh1fWv3oqcpLFyHa3TfFYC4PK2HqhToVM\";\n        }\n        v.required(object);\n        return object.toString();\n    },\n    compare: function compare(a, b) {\n        // sort ascending\n        return 1 * strCmp(a.toString(), b.toString());\n    }\n};\n\nTypes.address = {\n    _to_address: function _to_address(object) {\n        v.required(object);\n        if (object.addy) {\n            return object;\n        }\n        return _ecc.Address.fromString(object);\n    },\n    fromByteBuffer: function fromByteBuffer(b) {\n        return new _ecc.Address(fp.ripemd160(b));\n    },\n    appendByteBuffer: function appendByteBuffer(b, object) {\n        fp.ripemd160(b, Types.address._to_address(object).toBuffer());\n        return;\n    },\n    fromObject: function fromObject(object) {\n        return Types.address._to_address(object);\n    },\n    toObject: function toObject(object) {\n        var debug = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n        if (debug.use_default && object === undefined) {\n            return _ecc.ecc_config.get('address_prefix') + \"664KmHxSuQyDsfwo4WEJvWpzg1QKdg67S\";\n        }\n        return Types.address._to_address(object).toString();\n    },\n    compare: function compare(a, b) {\n        // sort decending\n        return -1 * strCmp(a.toString(), b.toString());\n    }\n};\n\nvar strCmp = function strCmp(a, b) {\n    return a > b ? 1 : a < b ? -1 : 0;\n};\nvar firstEl = function firstEl(el) {\n    return Array.isArray(el) ? el[0] : el;\n};\nvar sortOperation = function sortOperation(array, st_operation) {\n    // console.log('operation.nosort', st_operation.nosort)\n    return st_operation.nosort ? array : st_operation.compare ? array.sort(function (a, b) {\n        return st_operation.compare(firstEl(a), firstEl(b));\n    }) : // custom compare operation\n    array.sort(function (a, b) {\n        return typeof firstEl(a) === \"number\" && typeof firstEl(b) === \"number\" ? firstEl(a) - firstEl(b) :\n        // A binary string compare does not work. Performanance is very good so HEX is used..  localeCompare is another option.\n        Buffer.isBuffer(firstEl(a)) && Buffer.isBuffer(firstEl(b)) ? strCmp(firstEl(a).toString(\"hex\"), firstEl(b).toString(\"hex\")) : strCmp(firstEl(a).toString(), firstEl(b).toString());\n    });\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}